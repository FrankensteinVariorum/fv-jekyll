{"version":3,"sources":["images/intensity_legend.svg","data/xml-cache.ts","tei-processing/helpers.ts","data/edition.ts","data/spine.ts","data/store.ts","components/helpers/EditionDot.tsx","components/PageLayout/EditionSelector.tsx","components/tei/TeiReactElement.tsx","components/tei/TeiReactText.tsx","components/tei/TeiAppWrapper.tsx","tei-processing/tei-converter.ts","components/tei/TeiContainer.tsx","components/PageLayout/Paging.tsx","components/PageLayout/Header.tsx","components/PageLayout/OptionsSelector.tsx","components/Variations/ReadingGroupComponent.tsx","components/Variations/Variation.tsx","components/Viewer/Viewer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","XmlCache","Object","classCallCheck","this","_xmls","_promises","Map","url","_this","has","Promise","resolve","get","promise","fetchXML","set","then","delete","xml","DOMParser","parseFromString","fetch","response","text","doc","parseXML","evaluateXPath","xpath","resolver","createNSResolver","documentElement","evaluate","err","console","error","concat","xpathResult","nodes","node","iterateNext","push","findElementByXmlId","xmlId","attrName","startsWith","idResults","length","Error","documentCount","Edition","code","name","chunks","createClass","key","value","chunkId","chunkStr","_getXML","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","FvStore","cache","getXML","getChunkUrl","abrupt","sent","stop","_x","apply","arguments","document","EditionWithBody","_Edition","possibleConstructorReturn","getPrototypeOf","inherits","getElementsByTagName","MSEdition","_Edition2","map","n","Chunk","edition","chunkNumber","tei","spine","mainRoots","marginRoots","variations","getMainRootElements","getMarginRootElements","appRef","app","apps","find","id","_load","_callee2","chunk","_context2","getSpine","initialize","_x2","_x3","ReadingGroup","apparatus","grpElement","groupId","editions","element","pointers","getAttribute","fillEditions","fillPointers","buildElement","Array","from","rdg","substr","ec","ed","filter","ptr","implementation","createDocument","group","createElement","children","dereferenced","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","clone","cloneNode","appendChild","return","Apparatus","_groups","idAttr","attributes","getNamedItem","nAttr","parseInt","parsePointers","_this2","groupElements","grp","_this3","el","parsePointer","ptrElement","rdgElement","parentNode","tagName","witAttr","editionCode","getEdition","rdgGroupElement","grpIdAttr","targetAttr","parts","split","referencedUrl","referencedTarget","groups","indexOf","Spine","_apps","_xml","_initialized","_initializationPromise","_this4","innerInitialize","_innerInitialize","parseApps","fetchAllReferences","rewriteStringRanges","dereferencePointers","addBackPointers","buildGroupsInApps","_parseApps","_callee3","appElements","_context3","_fetchAllReferences","_callee4","allUrls","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","urls","unique","promises","_context4","t0","finish","Set","all","_rewriteStringRanges","_callee5","re","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_loop","_iterator3","_step3","_this5","_context6","_wrapRegExp","start","invalidPointers","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","match","stringRange","validPointers","_context5","rewriteStringRange","add","t1","delegateYield","_rewriteStringRange","_callee6","range","targetDoc","targetNodes","targetElement","mockIdAttr","_context7","mockElementCount","setAttribute","_dereferencePointers","_callee7","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_loop2","_iterator5","_step5","_context9","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","_document","_context8","outerHTML","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","visitedApp","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","firstInApp","log","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","buildGroups","FvStoreClass","spines","i","sp","instance","EditionDot","classes","props","small","react_default","className","React","Component","EditionSelector","state","availableEditions","selectedEdition","componentDidMount","index","label","helpers_EditionDot","setState","onEditionSelected","editionChanged","selectedOption","warn","prevProps","option","react_select_browser_esm","onChange","options","TeiReactElement","tag","closingTag","htmlTag","data-tei-tag","ReactHtmlParser","TeiReactText","showText","TeiAppWrapper","onClick","showVariations","onAppClick","intensity","getOtherGroups","dotElements","groupDots","dotClasses","data-app","TeiConverter","teiTag","nodeAttributes","valueProps","nodeName","nodeValue","reactChildren","hasChildNodes","childNodes","childNode","childElement","nodeType","teiToReactElement","textContent","trim","teiProps","buildProperties","getHtmlTag","reactElement","getApp","TeiRendering","elements","getTeiObjects","converter","root","Paging","chunkIndex","availableChunks","disablePrev","disableNext","onChunkChanged","findIndex","opt","toString","onChunkSelected","updateChunk","delta","newChunk","newOption","c","prevChunkIndex","firstChunk","disabled","Header","e","src","alt","OptionsSelector","onVariationChanged","newShow","onTextChanged","newShowText","type","checked","ReadingGroupComponent","content","title","join","dots","Variation","Variations_ReadingGroupComponent","Viewer","loading","onNewChunk","load","onNewEdition","onVariation","show","onText","viewerClasses","PageLayout_EditionSelector","PageLayout_Paging","PageLayout_OptionsSelector","PageLayout_Header","TeiContainer","Variations_Variation","App","components_Viewer_Viewer","Boolean","window","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3540ca17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/intensity_legend.91d6f78c.svg\";","// This class holds a cache of XML documents, fetching them from the web if they are not there\n// Every piece of code uses this, so that we can load XMLs again and again without worried about performance\n//\n// NOTE: The cache contains parsed Documents. If you change the document, it's going to be changed everywhere.\n// This is on purpose - as we add attributes and tags for pointer resolution.\n\nexport default class XmlCache {\n    private  _xmls : Map<string, Document>;  // Map from URL to a parsed XML\n    private _promises: Map<string, Promise<Document>>;\n    private static documentCount = 0;\n\n    public constructor() {\n        this._xmls = new Map<string, Document>();\n        this._promises = new Map<string, Promise<Document>>();\n    }\n\n    public getXML(url: string): Promise<Document> {\n        // This function is async, but we implement the Promises ourselves, since we also cache promises\n        // This code only works because asynchronous Javascript is single threaded (note there are no locks)\n        if (this._xmls.has(url)) {\n            return Promise.resolve(this._xmls.get(url)!);\n        }\n\n        if (this._promises.has(url)) {\n            return this._promises.get(url)!;\n        }\n\n        const promise = this.fetchXML(url);\n        this._promises.set(url, promise);\n        promise.then(() => {\n            this._promises.delete(url);\n        });\n        return promise;\n    }\n\n    private parseXML(xml: string) {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(xml, \"text/xml\");\n    \n        return doc;\n    }\n    \n    private async fetchXML(url:string) {\n        const response = await fetch(url);\n        const xml = await response.text();\n    \n        const doc = this.parseXML(xml);\n        this._xmls.set(url, doc);\n\n        return doc\n    }\n}","\nexport function evaluateXPath(doc: Document, xpath: string): Node[] {\n    const resolver = doc.createNSResolver(doc.documentElement);\n    try{\n        doc.evaluate(xpath, doc, resolver);\n    } catch(err) {\n        console.error(`xpath evaluation of ${xpath} failed: `, err);\n    }\n    const xpathResult = doc.evaluate(xpath, doc, resolver);\n    const nodes: Node[] = [];\n\n    let node = xpathResult.iterateNext();\n    while(node) {\n        nodes.push(node);\n        node = xpathResult.iterateNext();\n    }\n\n    return nodes;\n}\n\nexport function findElementByXmlId(doc: Document, xmlId: string): Element {\n    const attrName = xmlId.startsWith('mock') ? 'mock-id' : 'xml:id';\n    const xpath = `//*[@${attrName}=\"${xmlId}\"]`;\n    const idResults = evaluateXPath(doc, xpath);\n\n    if (idResults.length === 0) {\n        throw Error(`Pointer ${xmlId} references an invalid element`);\n    } else if (idResults.length > 1) {\n        throw Error(`Pointer ${xmlId} references more than one element`);\n    }\n    return idResults[0] as Element;\n}\n","import FvStore from \"./store\";\nimport { Spine } from \"./spine\";\nimport { evaluateXPath } from \"../tei-processing/helpers\";\n\nexport abstract class Edition {\n    public readonly code: string = ''; // 1818, 1823, 1831, Thomas, MS\n    public readonly name: string = '';\n    public readonly chunks: number[] = [];\n\n    constructor(code: string, name: string, chunks: number[]) {\n        this.code = code;\n        this.name = name;\n        this.chunks = chunks;\n    }\n\n    protected getChunkUrl(chunkId: number) {\n        const chunkStr = chunkId < 10 ? `0${chunkId}` : `${chunkId}`;\n        const url = `https://raw.githubusercontent.com/PghFrankenstein/fv-data/master/variorum-chunks/f${this.code}_C${chunkStr}.xml`;\n\n        return url;\n    }\n\n    public async getXML(chunkId: number) {\n        return await FvStore.cache.getXML(this.getChunkUrl(chunkId));\n    }\n\n    public abstract getMainRootElements(document: Document): Element[];\n    public getMarginRootElements(document: Document): Element[] {\n        return []; // The default behavior is no margins\n    }\n}\n\nexport class EditionWithBody extends Edition {\n    public getMainRootElements(document: Document): Element[] {\n        try {\n            return [document.getElementsByTagName('body')[0]];\n        } catch(err) {\n            console.error(`Can't located body element of ${this.code}: ${err}`);\n            throw new Error(\"Can't locate body element\");\n        }\n    }\n} \n\nexport class MSEdition extends Edition { \n    public getMainRootElements(document: Document): Element[] {\n        const xpath = \"//tei:zone[@type='main']\";\n        const nodes = evaluateXPath(document, xpath);\n        return nodes.map((n) => n as Element);\n    }\n\n    public getMarginRootElements(document: Document): Element[] {\n        const xpath = \"//tei:zone[@type='left_margin']\";\n        const nodes = evaluateXPath(document, xpath);\n        return nodes.map((n) => n as Element);\n    }\n}\n\n\nexport class Chunk {\n    public readonly edition: Edition;\n    public readonly chunkNumber: number;\n    public readonly tei: Document;\n    public readonly mainRoots: Element[];\n    public readonly marginRoots: Element[];\n    public readonly variations: Spine;\n\n    private constructor(edition: Edition, chunkNumber: number, tei: Document, spine: Spine) {\n        this.edition = edition;\n        this.chunkNumber = chunkNumber;\n        this.tei = tei;\n        this.variations = spine;\n        this.mainRoots = edition.getMainRootElements(tei);\n        this.marginRoots = edition.getMarginRootElements(tei);\n    }\n\n    public static async load(edition: Edition, chunkNumber: number): Promise<Chunk> {\n        const document = await edition.getXML(chunkNumber);\n        const spine = await FvStore.getSpine(chunkNumber);\n        await spine.initialize();\n\n        const chunk = new Chunk(edition, chunkNumber, document, spine);\n        // chunk.addAppReferences();\n\n        return chunk;\n    }\n\n    public getApp(appRef: string) {\n        const app = this.variations.apps.find((a) => a.id === appRef);\n        if(!app) {\n            throw new Error(`Can't locate app ${appRef}`);\n        }\n        return app;\n    }\n}\n","import FvStore from \"./store\";\nimport { Edition } from \"./edition\";\nimport { evaluateXPath, findElementByXmlId } from \"../tei-processing/helpers\";\n\ninterface PointerData {\n    ptrElement: Element;\n    groupId: string;\n    edition: Edition;\n    referencedUrl: string;\n    referencedTarget: string;\n\n    dereferenced?: Element;\n}\n\n// async function debug1818(where: string) {\n//     const xml = await FvStore.getEdition('1818').getXML(1);\n//     console.debug(`1818 ${where}:`)\n//     console.debug(xml.documentElement.outerHTML);\n// }\n\nexport class ReadingGroup {\n    public readonly groupId: string;\n    public readonly editions: Edition[];\n    public readonly apparatus: Apparatus;\n    public readonly element?: Element;\n\n    private readonly pointers: PointerData[];\n\n    constructor(apparatus: Apparatus, private grpElement: Element) {\n        this.groupId = grpElement.getAttribute('xml:id')!;\n        this.apparatus = apparatus;\n        this.editions = this.fillEditions();\n        this.pointers = this.fillPointers();\n        this.element = this.buildElement();\n    }\n\n    private fillEditions() {\n        const rdgElements = Array.from(this.grpElement.getElementsByTagName('rdg'));\n        const editionCodes = rdgElements.map((rdg) => rdg.getAttribute('wit')!.substr(2)); // <rdg wit=\"#fMS\">\n        const editions = editionCodes.map((ec) => FvStore.editions.find((ed) => ed.code === ec)!);\n\n        return editions;\n    }\n\n    private fillPointers() {\n        // Fill pointers for one of the editions in the group, as they are all identical\n        const edition = this.editions[0];\n        return this.apparatus.pointers.filter((ptr) => ptr.groupId === this.groupId && ptr.edition === edition);\n    }\n\n    private buildElement() {\n        // Build a new XML element that contains all the dereferenced pointers in this group\n        // We create a new document for each such element\n        if (this.pointers.length === 0) {\n            return undefined;\n        }\n\n        const doc = document.implementation.createDocument(null, null, null);\n        const group = doc.createElement('rdgGrp');\n        const children = this.pointers.map((ptr) => ptr.dereferenced!);\n        for(const child of children) {\n            const clone = child.cloneNode(true);  // We must clone the node, otherwise it's detached from the original XML\n            group.appendChild(clone);\n        }\n        doc.appendChild(group);\n\n        return group;\n    }\n}\n\nexport class Apparatus {  // Content of the <app> tag\n    public readonly id: string;\n    public readonly n: number | undefined;\n    public readonly element: Element;\n\n    public pointers: PointerData[];\n    private _groups: ReadingGroup[];\n\n    constructor(element: Element) {\n        this.element = element;\n\n        const idAttr = element.attributes.getNamedItem('xml:id')\n        if (!idAttr) {\n            throw new Error('<app> tag with no xml:id');\n        }\n        this.id = idAttr.value;\n\n        const nAttr = element.attributes.getNamedItem('n');\n        this.n = nAttr ? parseInt(nAttr.value) : undefined;\n\n        this.pointers = this.parsePointers();\n        this._groups = [];\n    }\n\n    public get groups() { return this._groups; }\n\n    public buildGroups() {\n        const groupElements = Array.from(this.element.getElementsByTagName('rdgGrp'));\n        // const groupSet = new Set<string>(this.pointers.map((ptr) => ptr.groupId));\n        this._groups = Array.from(groupElements).map((grp) => new ReadingGroup(this, grp));\n    }\n\n    private parsePointers() {\n        const ptrElements = Array.from(this.element.getElementsByTagName('ptr'));\n        const ptrs = ptrElements.map((el) => this.parsePointer(el));\n\n        return ptrs;\n    }\n\n    private parsePointer(ptrElement: Element): PointerData {\n        const rdgElement = ptrElement.parentNode as Element;\n        if (!rdgElement || rdgElement.tagName !== 'rdg') {\n            throw new Error(`Parent of <ptr> is not <rdg>`);\n        }\n        const witAttr = rdgElement.attributes.getNamedItem('wit');\n        if (!witAttr) {\n            throw new Error('<rdg> element does not have a wit attribute');\n        }\n        const editionCode = witAttr.value.substr(2);  // with is #f1818, #fMS etc...\n        let edition: Edition;\n        try {\n            edition = FvStore.getEdition(editionCode);\n        } catch(err) {\n            throw new Error(`<rdg> has invalid witness ${witAttr.value}`);\n        }\n\n        const rdgGroupElement = rdgElement.parentNode as Element;\n        if(!rdgGroupElement || rdgGroupElement.tagName !== 'rdgGrp') {\n            throw new Error(`Parent of <rdg> element is not <rdgGrp>`);\n        }\n        const grpIdAttr = rdgGroupElement.attributes.getNamedItem('xml:id');\n        if (!grpIdAttr) {\n            throw new Error('<rdrGrp> has no xml:id');\n        }\n        const groupId = grpIdAttr.value;\n\n        const targetAttr = ptrElement.attributes.getNamedItem('target');\n        if (!targetAttr) {\n            throw new Error(`<ptr> element has not target attribute`);\n        }\n\n        const parts = targetAttr.value.split('#')\n        if (parts.length !== 2) {\n            throw new Error(`Target ${targetAttr.value} is not well formatted. Expected uri#xpath`);\n        }\n\n        return {\n            ptrElement,\n            edition,\n            groupId,\n            referencedUrl: parts[0],\n            referencedTarget: parts[1],\n        };\n    }\n\n    public getOtherGroups(ed: Edition) {\n        // Returns all the groups besides the one that holds this edition\n        return this.groups.filter((grp) => grp.editions.indexOf(ed) === -1);\n    }\n}\n\ninterface StringRange {\n    xpath: string,\n    start: number,\n    length: number,\n}\n\n\nexport class Spine {\n    public readonly chunkNumber: number;\n    private _apps: Apparatus[] | undefined;\n    private _xml: Document | undefined;\n    private _initialized = false;\n    private _initializationPromise?: Promise<void>;\n    private static mockElementCount = 0;\n    \n    constructor(chunk: number) {\n        this.chunkNumber = chunk\n    }\n\n    public initialize(): Promise<void> {\n        // Initialize may be called several times before the first initialization complete.\n        // We make sure initialization runs only once\n        if(this._initializationPromise) {\n            return this._initializationPromise;\n        }\n\n        this._initializationPromise = this.innerInitialize();\n        this._initializationPromise.then(() => {\n            this._initializationPromise = undefined;\n        })\n        return this._initializationPromise;\n    }\n\n    private async innerInitialize() {\n        if(this._initialized) {\n            return;\n        }\n\n        this._xml = await this.getXML();\n\n        await this.parseApps();\n        await this.fetchAllReferences();\n        await this.rewriteStringRanges();\n        await this.dereferencePointers();\n        this.addBackPointers();\n        this.buildGroupsInApps();\n        \n        this._initialized = true;\n    }\n\n    private async getXML() {\n        const chunkStr = this.chunkNumber < 10 ? `0${this.chunkNumber}` : `${this.chunkNumber}`;\n        const url = `https://raw.githubusercontent.com/PghFrankenstein/fv-data/master/standoff_Spine/spine_C${chunkStr}.xml`\n\n        const document = await FvStore.cache.getXML(url);\n        return document;\n    }\n\n    private async parseApps() {\n        if(!this._xml) {\n            throw new Error('parseApps called before getXML, which makes no sense')\n        }\n\n        const appElements = Array.from(this._xml.getElementsByTagName('app'));\n        const apps = appElements.map((app) => new Apparatus(app));\n        this._apps = apps;\n    }\n\n    public get apps(): Apparatus[] {\n        if (!this._apps) {\n            throw new Error(`Spine not initialized yet`);\n        }\n        return this._apps;\n    }\n\n    // Download all referenced XMLs concurrently (if they're not cached)\n    private async fetchAllReferences() {\n        let allUrls = [] as string[];\n\n        for(let app of this.apps) {\n            const urls = app.pointers.map((ptr) => ptr.referencedUrl);\n            allUrls = allUrls.concat(urls);\n        }\n\n        const unique = Array.from(new Set<string>(allUrls));\n        const promises = unique.map((url) => FvStore.cache.getXML(url));\n        await Promise.all(promises);  // Returns only once all URLs have been fetched\n    }\n\n    // Rewrite string ranges to ordinary pointers. \n    // This is done by adding tags in the target XML with their own ID surrounding the relevant text elements\n\n    private async rewriteStringRanges() {\n        const re = /^string-range\\((?<xpath>.+),(?<start>\\d+),(?<length>\\d+)\\)$/;\n        \n        for(let app of this.apps) {\n            const invalidPointers = new Set<PointerData>();\n            for(let ptr of app.pointers) {\n                const match = ptr.referencedTarget.match(re);\n                if (match) {\n                    const stringRange = {\n                        xpath: match.groups!.xpath,\n                        start: parseInt(match.groups!.start),\n                        length: parseInt(match.groups!.length),\n                    };\n                    try {\n                        await this.rewriteStringRange(ptr, stringRange);\n                    } catch(err) {\n                        invalidPointers.add(ptr);\n                    }\n                }\n            }\n\n            const validPointers = app.pointers.filter((ptr) => !invalidPointers.has(ptr));\n            app.pointers = validPointers;\n        }\n    }\n\n    private async rewriteStringRange(ptr: PointerData, range: StringRange) {\n        // For now - just get the xml:id of the target element and replace the pointer's target.\n        // Add an xml:id if none exists on the target element\n        const targetDoc = await FvStore.cache.getXML(ptr.referencedUrl);\n        const targetNodes = evaluateXPath(targetDoc, range.xpath);\n\n        if (targetNodes.length === 0) {\n            console.error(`string-range for xpath ${range.xpath} failed to return a node`);\n            throw Error('string-range returned no nodes');\n        }\n\n        if (targetNodes.length > 1) {\n            console.error(`string-range for xpath ${range.xpath} returned more than one node`);\n            throw Error('string-range returned more than one node');\n        }\n\n        const targetElement = targetNodes[0] as Element;\n        const idAttr = targetElement.attributes.getNamedItem('xml:id');\n        const mockIdAttr = targetElement.attributes.getNamedItem('mock-id');\n        let xmlId = '';\n        if (idAttr) {\n            xmlId = idAttr.value;\n        } else if(mockIdAttr) {\n            xmlId = mockIdAttr.value;\n        } else {\n            xmlId = `mock-id-${Spine.mockElementCount}`;\n            Spine.mockElementCount += 1;\n\n            // Adding xml:id to an existing document doesn't work fully - XPath doesn't find it\n            // unless the document is completely reparsed. So we add our own mock-id attribute instead\n            targetElement.setAttribute('mock-id', xmlId);\n        }\n\n        // Update the Pointer\n        ptr.referencedTarget = xmlId;  // In memory\n        ptr.ptrElement.setAttribute('target', `${ptr.referencedUrl}#${xmlId}`);\n    }\n\n    private async dereferencePointers() {\n        for(let app of this.apps) {\n            const invalidPointers = new Set<PointerData>();\n\n            for(let ptr of app.pointers) {\n                const document = await FvStore.cache.getXML(ptr.referencedUrl);\n                try {\n                    const element = findElementByXmlId(document, ptr.referencedTarget);\n                    ptr.dereferenced = element;\n                } catch(err) {\n                    console.error(`Pointer ${ptr.ptrElement.outerHTML} is invalid`);\n                    invalidPointers.add(ptr);\n                }\n            }\n\n            const validPointers = app.pointers.filter((ptr) => !invalidPointers.has(ptr));\n            app.pointers = validPointers\n        }\n    }\n\n    private addBackPointers() {\n        // We will add the back pointers to all editions while we're at it\n        // Backpointers are an attribute - app-ref, which contains the id of the app element\n        for(let app of this.apps) {\n            const visitedApp = new Set<string>();\n            for(let ptr of app.pointers) {\n                if (!ptr.dereferenced) {\n                    console.error('Non dereferenced pointed in addBackPointers - pointers should all be dereferenced by now');\n                    continue;\n                }\n                const firstInApp = !visitedApp.has(ptr.referencedUrl);\n                ptr.dereferenced!.setAttribute('app-ref', app.id);\n                ptr.dereferenced!.setAttribute('first-in-app', firstInApp ? 'true' : 'false');\n                console.log(ptr.dereferenced!.outerHTML);\n                visitedApp.add(ptr.referencedUrl);\n            }\n        }\n    }\n\n    private buildGroupsInApps() {\n        // Build the groups in all App objects\n        for(const app of this.apps) {\n            app.buildGroups();\n        }\n    }\n}\n","import XmlCache from \"./xml-cache\";\nimport { Edition, EditionWithBody, MSEdition } from \"./edition\";\nimport { Spine } from \"./spine\";\n\n/*\n * This class contains the application Store, which holds all the TEI data, as well as processed data.\n * We are not using a Redux store here to save time. In the future we might turn this into a Redux store.\n * In the mean time, we have a singleton store instance, which is passed to the root component of the application,\n * (although the singleton can just be accessed by any class)\n */\n\n class FvStoreClass {\n     public readonly cache: XmlCache;\n     public readonly editions: Edition[];\n     public readonly spines: Spine[];\n     public static instance = new FvStoreClass();\n\n     private constructor() {\n         this.cache = new XmlCache();\n         this.editions = [\n            new MSEdition('MS', 'MS', [7, 8, 9, 10]),\n            new EditionWithBody('1818', '1818', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n            new EditionWithBody('Thomas', 'Thomas', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n            new EditionWithBody('1823', '1823', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n            new EditionWithBody('1831', '1831', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n         ]\n\n         this.spines = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => new Spine(i));\n     }\n\n     public getEdition(code: string): Edition {\n         const ed = this.editions.find((ed) => ed.code === code);\n\n         if (!ed) {\n             throw new Error(`Can't find edition ${code}`);\n         }\n         return ed;\n     }\n\n     public getSpine(chunk: number): Spine {\n         const spine = this.spines.find((sp) => sp.chunkNumber === chunk);\n\n         if(!spine) {\n             throw new Error(`Can't find spine for chunk ${chunk}`);\n         }\n         return spine;\n     }\n }\n\nconst FvStore = FvStoreClass.instance;\nexport default FvStore;  // Everybody can just access FvStore.property","import { Edition } from \"../../data/edition\";\nimport React from \"react\";\n\ninterface EditionDotProps {\n    edition: Edition;\n    small?: boolean | undefined;\n}\n\nclass EditionDot extends React.Component<EditionDotProps> {\n    render() {\n        let classes = `dot ed-${this.props.edition.code}`;\n        if (this.props.small) {\n            classes += ' small-dot';\n        }\n\n        return <span className={classes}/>;\n    }\n}\n\nexport default EditionDot;","import React from 'react';\nimport Select from 'react-select';\nimport { Edition } from '../../data/edition';\nimport FvStore from '../../data/store';\nimport EditionDot from '../helpers/EditionDot';\n\nexport interface SelectOption {\n    value: string;\n    label: any;// HTMLSpanElement;\n}\n\ninterface EditionSelectorProps {\n    editions: Edition[],\n    edition: Edition,\n\n    onEditionSelected: (edition: Edition) => void;\n}\n\ninterface EditionSelectorState {\n    availableEditions: SelectOption[],\n    selectedEdition: SelectOption | undefined,\n}\n\nclass EditionSelector extends React.Component<EditionSelectorProps, EditionSelectorState> {\n\n    state = {\n        availableEditions: [] as SelectOption[],\n        selectedEdition: undefined as SelectOption | undefined,\n    }\n    \n    componentDidMount = () => {\n        const editions = FvStore.editions.map((ed, index) => ({ key: index, value: ed.code, label: <label><EditionDot edition={ ed }/>{ed.name}</label> } as SelectOption));\n\n        // Select the first edition\n        this.setState({ availableEditions: editions, selectedEdition: editions[0] });\n        this.props.onEditionSelected(this.props.editions[0]);\n    }\n\n    componentDidUpdate(prevProps: EditionSelectorProps) {\n        if(prevProps.edition !== this.props.edition) {\n            const option = this.state.availableEditions.find((ed) => ed.value === this.props.edition.code);\n            if(option) {\n                this.setState( { selectedEdition: option });\n            }\n        }\n    }\n\n    editionChanged = (selectedOption: SelectOption) => {\n        const edition = FvStore.editions.find((ed) => ed.code === selectedOption.value);\n        if(!edition) {\n            console.warn(`Couldn't find edition for selection ${selectedOption.value}`);\n            return;\n        }\n\n        this.setState( { selectedEdition: selectedOption });\n        this.props.onEditionSelected(edition);\n    }\n\n\n    render() {\n        return (\n        <div>\n            <label className='bold-choose'>CHOOSE A VERSION</label>\n            <Select\n                className='select-style'\n                onChange={this.editionChanged}\n                options={this.state.availableEditions}\n                value={this.state.selectedEdition}\n            ></Select>\n        </div>\n        );\n    }\n}\n\nexport default EditionSelector;\n","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\nexport interface TeiReactElementProps {\n   htmlTag?: string;\n   tag: string;\n   id?: string;\n   teiProps: any;\n   showText: boolean;\n   showVariations: boolean;\n}\n\nclass TeiReactElement extends React.Component<TeiReactElementProps> {\n     \n   render() {\n      let tag = '';\n      let closingTag = '';\n\n      if(this.props.htmlTag) {\n         tag = `<${this.props.htmlTag}>`;\n         closingTag = `</${this.props.htmlTag}>`;\n      }\n\n      return (\n         <div className={`tei-element tei-${this.props.tag}`} data-tei-tag={this.props.tag}>\n             {/* data-app-ref={appRef}> */}\n            {ReactHtmlParser(tag)}\n            {this.props.children}\n            {ReactHtmlParser(closingTag)}\n         </div>\n      );\n   }\n}\n\nexport default TeiReactElement;\n","import React from 'react';\n\ninterface TeiReactTextProps {\n    text: string;\n    showText: boolean;\n    showVariations: boolean;\n}\n\nclass TeiReactText extends React.Component<TeiReactTextProps> {\n\n    render() {\n        let classes = 'tei-cdata';\n        if (!this.props.showText) {\n            classes += ' no-text';\n        }\n\n        return (\n            <span className={classes}>\n                { this.props.text }      \n            </span>\n        );\n    }\n}\n\nexport default TeiReactText;\n","import React from 'react';\nimport { Apparatus } from '../../data/spine';\nimport { Edition } from '../../data/edition';\nimport EditionDot from '../helpers/EditionDot';\n\ninterface TeiAppWrapperProps {\n   showVariations: boolean;\n   showText: boolean;\n   edition?: Edition;\n   app: Apparatus;\n   firstInApp: boolean;\n   onAppClick?: (app: Apparatus) => void,\n}\n\nclass TeiAppWrapper extends React.Component<TeiAppWrapperProps> {\n   onClick = () => {\n      if (this.props.showVariations && this.props.onAppClick) {\n         this.props.onAppClick(this.props.app);\n      }\n   }\n\n   render() {\n      if(!this.props.showVariations) {\n         return <div className='app-wrapper-hidden'>{ this.props.children }</div>;\n      }\n\n      const intensity = this.props.app.n || 1;\n      const level = (intensity < 5) ? 1 : (intensity < 25) ? 2 : 3;\n      const classes = `app-wrapper app-intensity-${level}`;\n\n      // Calculate the dot elements\n      const groups = this.props.app.getOtherGroups(this.props.edition!);\n      let dotElements: any[] = [];\n      let key = 0;\n      for(const group of groups) {\n         const groupDots = group.editions.map((ed) => <EditionDot small={true} edition={ ed } key={ed.code} />);\n         dotElements = dotElements.concat(groupDots);\n         dotElements.push(<span className='dot dot-break' key={key}/>);\n         key++;\n      }\n\n      let dotClasses = 'app-wrapper-dots';\n      if(!this.props.showText) {\n         dotClasses += ' no-text';\n      }\n\n      return (\n         <div className={classes} onClick={this.onClick} data-app={this.props.app.id}>\n            { this.props.firstInApp ? <div className={dotClasses}>\n               { dotElements }\n            </div> : '' }\n            { this.props.children }\n         </div>\n      );\n   }\n}\n\nexport default TeiAppWrapper;\n","/* This file contains a class that takes the TEI and converts it into a React tree */\n\nimport React, { ReactNode } from 'react';\nimport TeiReactElement from '../components/tei/TeiReactElement';\nimport TeiReactText from '../components/tei/TeiReactText';\nimport { Chunk, Edition } from '../data/edition';\nimport TeiAppWrapper from '../components/tei/TeiAppWrapper';\nimport { Apparatus } from '../data/spine';\n\nexport class TeiConverter {\n    private static index = 0;\n\n    constructor(private showVariations: boolean, private showText: boolean, private edition?: Edition, private chunk?: Chunk) {\n    }\n\n    private getHtmlTag(teiTag: string) {\n        if (teiTag === 'p') {\n            return 'p';\n        } else if (teiTag === 'head') {\n            return 'h3';\n        } else if (teiTag === 'ab') {\n            return 'p';\n        }\n\n        return undefined;\n    }\n\n    private buildProperties(node: Node): any {\n        const nodeAttributes = (node as any).attributes;\n        const valueProps: any = {};\n\n        for (var i = 0; i < nodeAttributes.length; i++) {\n            let name = nodeAttributes[i].nodeName;\n            if (name === 'xml:id') {\n                name = 'id';\n            }\n            valueProps[name] = nodeAttributes[i].nodeValue;\n        }\n\n        return valueProps;\n    }\n\n    public teiToReactElement(node: Node, onAppClick?: (app: Apparatus) => void): ReactNode {  // Returns a single React element\n        const reactChildren: ReactNode[] = [];\n        // create elements for all children\n        if (node.hasChildNodes()) {\n            for (let i = 0; i < node.childNodes.length; i++) {\n                const childNode = node.childNodes[i];\n                let childElement: ReactNode = undefined;\n                if (childNode.nodeType === 1) {\n                    childElement = this.teiToReactElement(childNode, onAppClick);\n                } else if (childNode.nodeType === 3) {\n                    let text = childNode.textContent || '';\n                    text = text.trim();\n                    if (text) {\n                        childElement = React.createElement(TeiReactText, {\n                            text: childNode.textContent || '',\n                            showText: this.showText,\n                            showVariations: this.showVariations,\n                            key: TeiConverter.index++,\n                        });\n                    }\n                } else {\n                    console.warn('Child node of unrecognizezd type: ', childNode);\n                }\n\n                if (childElement) {\n                    reactChildren.push(childElement);\n                }\n            }\n        }\n\n        // build properties\n        const teiProps = this.buildProperties(node);\n\n        // return create react element\n        var props: any = {\n            tag: node.nodeName,\n            key: TeiConverter.index++,\n            htmlTag: this.getHtmlTag(node.nodeName),\n            showText: this.showText,\n            showVariations: this.showVariations,\n            teiProps: teiProps,\n        };\n\n        let reactElement: ReactNode = React.createElement(TeiReactElement, props, reactChildren); // Pass children\n\n        if (this.chunk && this.showVariations && teiProps['app-ref']) {\n            const app = this.chunk.getApp(teiProps['app-ref']);\n            const firstInApp = teiProps['first-in-app'] === 'true';\n\n            // We have an <app> to wrap around the element\n            reactElement = React.createElement(TeiAppWrapper, {\n                key: TeiConverter.index++,\n                showVariations: this.showVariations,\n                showText: this.showText,\n                edition: this.edition,\n                onAppClick,\n                app, firstInApp},\n            [reactElement])\n        }\n\n        return reactElement;\n    }\n}\n","import React, { ReactNode } from 'react';\nimport { TeiConverter } from '../../tei-processing/tei-converter';\nimport { Chunk, Edition } from '../../data/edition';\nimport { Apparatus } from '../../data/spine';\n\ninterface TeiRenderingProps {\n    chunk: Chunk;\n    showVariations: boolean;\n    showText: boolean;\n    edition: Edition;\n    onAppClick?: (app: Apparatus) => void;\n}\n\ninterface TeiRenderingState {\n    elements?: ReactNode[];\n}\n\nclass TeiRendering extends React.Component<TeiRenderingProps, TeiRenderingState> {\n    state = {\n        elements: undefined,\n    }\n\n    componentDidMount() {\n        this.getTeiObjects();\n    }\n\n    componentDidUpdate(prevProps: TeiRenderingProps) {\n        if(!prevProps || \n            this.props.chunk !== prevProps.chunk || \n            this.props.edition !== prevProps.edition || \n            this.props.showText !== prevProps.showText ||\n            this.props.showVariations !== prevProps.showVariations) {\n            this.getTeiObjects(); // No matter which property has changed, we need to render everything again\n        }\n    }\n\n    getTeiObjects = () => {\n        const converter = new TeiConverter(this.props.showVariations, this.props.showText, this.props.edition, this.props.chunk);\n        const elements = this.props.chunk.mainRoots.map((root) => converter.teiToReactElement(root, this.props.onAppClick));\n\n        this.setState( { elements });\n    } \n\n    render() {\n        return (\n            <div className=\"tei-container\">\n                { this.state.elements }\n            </div>\n        );\n    }\n}\n\nexport default TeiRendering;\n","import React from 'react';\nimport { Edition } from '../../data/edition';\nimport Select from 'react-select';\nimport { SelectOption } from './EditionSelector';\n\ninterface PagingProps {\n    edition: Edition | undefined;\n    chunk: number;\n    onChunkSelected: (chunk: number) => void;\n}\n\ninterface PagingState {\n    chunkIndex: number,\n    selectedOption: SelectOption | undefined,\n    availableChunks: SelectOption[],\n    disablePrev: boolean,\n    disableNext: boolean,\n}\n\nclass Paging extends React.Component<PagingProps, PagingState> {\n\n    state = {\n        chunkIndex: this.props.chunk,\n        selectedOption: undefined as SelectOption | undefined,\n        availableChunks: [] as SelectOption[],\n        disablePrev: true,\n        disableNext: false,\n    }\n\n    componentDidUpdate(prevProps: PagingProps) {\n        if (this.props.edition !== prevProps.edition) {\n            let chunks = [] as SelectOption[];\n            if (this.props.edition) {\n                chunks = this.props.edition.chunks.map((c) => ({ value: c.toString(), label: c.toString() } as SelectOption));\n                let prevChunkIndex = 0;\n                if (prevProps) {\n                    prevChunkIndex = this.state.availableChunks.findIndex((opt) => opt.value === prevProps.chunk.toString());\n                    if (prevChunkIndex === -1) {\n                        prevChunkIndex = 0;\n                    }\n                }\n\n                const firstChunk = this.props.edition.chunks[prevChunkIndex];\n                this.setState( { availableChunks: chunks, chunkIndex: prevChunkIndex, selectedOption: chunks[prevChunkIndex] });\n                this.props.onChunkSelected(firstChunk);\n            }\n        }\n\n        if (this.props.chunk !== prevProps.chunk) {\n            const index = this.state.availableChunks.findIndex((opt) => opt.value === this.props.chunk.toString());\n            if (index !== -1) {\n                this.setState({ \n                    chunkIndex: index, \n                    selectedOption: this.state.availableChunks[index], \n                    disablePrev: index===0, \n                    disableNext: index===this.state.availableChunks.length - 1 \n                });\n            } else {\n                console.warn(`Can't set pager to non existing chunk ${this.props.chunk}`);\n                this.setState({ chunkIndex: 0, selectedOption: this.state.availableChunks[0], disablePrev: true, disableNext: this.state.availableChunks.length === 1 });\n            }\n            \n        }\n    }\n\n    onChunkChanged = (selectedOption: SelectOption) => {\n        const chunk = parseInt(selectedOption.value);\n        const index = this.state.availableChunks.findIndex((opt) => opt.value === chunk.toString());\n        this.setState({ chunkIndex: index, selectedOption });\n\n        this.props.onChunkSelected(chunk);\n    }\n\n    updateChunk = (delta: number) => {\n        this.setState( {disablePrev: false, disableNext: false} );\n        const chunk = this.state.chunkIndex + 1;\n        const newChunk = chunk + delta;\n        if (newChunk === 1) {\n            this.setState( {disablePrev: true} );\n        } else if (newChunk === this.state.availableChunks.length) {\n            this.setState( {disableNext: true })\n        }\n        if (this.props.edition!.chunks.indexOf(newChunk) === -1) {\n            return;\n        }\n        const newOption = this.state.availableChunks.find((opt) => opt.value === newChunk.toString());\n        if (!newOption) {\n            console.error(\"Can't locate new option!\")\n        }\n        this.setState({ chunkIndex: newChunk - 1, selectedOption: newOption });\n        this.props.onChunkSelected((newChunk));\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.edition ?\n                <div>\n                    <div className='in-line'>\n                        <label className='bold-choose'>CHOOSE A SECTION</label>\n                        <Select\n                            className='select-style'\n                            onChange={this.onChunkChanged}\n                            options={this.state.availableChunks}\n                            value={this.state.selectedOption}\n                        />\n                    </div>\n                    \n                    <div className='in-line paging-buttons'>\n                        <button onClick={() => this.updateChunk(-1)} className='prev'\n                            disabled={this.state.disablePrev}></button><label>Previous Section</label>\n                        <label className='margin-button'>Next Section</label><button className='next'\n                            onClick={() => this.updateChunk(1)} disabled={this.state.disableNext}></button>\n                    </div>\n                </div>\n                : ''}\n            </div>\n        );\n    }\n}\n\nexport default Paging;\n","import React from 'react';\nimport FvStore from '../../data/store';\nimport { Edition } from '../../data/edition';\n\nimport variations from '../../images/intensity_legend.svg';\nimport EditionDot from '../helpers/EditionDot';\n\ninterface HeaderData {\n    edition: Edition | undefined;\n}\n\nclass Header extends React.Component<HeaderData> {\n\n    render() {\n        const editions = FvStore.editions.map((e, index) => \n            <label key={index} className='edition-label'><EditionDot edition={e} key={e.code}/>{e.name}</label>);\n        return (\n            <div>\n                <header className='viewer__cols'>\n                    <div id='viewer__legend-editions'>\n                        {editions}\n                    </div>\n                    <div id='viewer__title'  className='center-label'>\n                        {this.props.edition ?\n                        <h2>{this.props.edition.name} Edition</h2>\n                        : <h2>Edition</h2>}\n                    </div>\n                    <div id='viewer__legend-variance'>\n                        <label>Amount of Variance</label>\n                        <img className='variations' src={variations} alt={variations} />\n                    </div>\n                </header>\n\n                <hr className='line' />\n                <div className='viewer__cols'>\n                    <div className='center-label'>Marginalia</div>\n                    <div className='center-label'>Text</div>\n                    <div className='center-label'>Variations</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\n\ninterface OptionsSelectorProps {\n    showVariations: boolean,\n    showText: boolean,\n\n    onVariationChanged: (variation: boolean) => void;\n    onTextChanged: (text: boolean) => void;\n}\n\ninterface OptionsSelectorState {\n    showVariations: boolean,\n    showText: boolean,\n}\n\nclass OptionsSelector extends React.Component<OptionsSelectorProps, OptionsSelectorState> {\n\n    state = {\n        showVariations: true,\n        showText: true,\n    }\n    \n    componentDidUpdate(prevProps: OptionsSelectorProps) {\n        if (this.props.showVariations !== this.state.showVariations) {\n            this.setState( { showVariations: this.props.showVariations });\n        }\n\n        if(this.props.showText !== this.state.showText) {\n            this.setState( { showText: this.props.showText });\n        }\n        \n    }\n\n    onVariationChanged = () => {\n        const newShow = !this.state.showVariations;\n        this.setState( { showVariations: newShow });\n        this.props.onVariationChanged(newShow);\n    }\n    \n    onTextChanged = () => {\n        const newShowText = !this.state.showText;\n        this.setState( { showText: newShowText });\n        this.props.onTextChanged(newShowText);\n    }\n    \n    render() {\n        return (\n        <div>\n            <label className='options-label bold-choose'>CHOOSE OPTIONS</label>\n            <label className='options-label'>\n                <input\n                    name=\"variation\"\n                    type=\"checkbox\"\n                    checked={this.state.showVariations}\n                    onChange={this.onVariationChanged} />\n                See Variants\n            </label>\n            \n            <label className='options-label'>\n                <input\n                    name=\"text\"\n                    type=\"checkbox\"\n                    checked={this.state.showText}\n                    onChange={this.onTextChanged} />\n                See Text\n            </label>\n        </div>\n        );\n    }\n}\n\nexport default OptionsSelector;\n","import { ReadingGroup } from \"../../data/spine\";\nimport React from \"react\";\nimport EditionDot from \"../helpers/EditionDot\";\nimport { TeiConverter } from \"../../tei-processing/tei-converter\";\n\ninterface ReadingGroupComponentProps {\n    group: ReadingGroup;\n}\n\n// Note: This class is called ReadingGroupComponent because ReadingGroup is already taken\nclass ReadingGroupComponent extends React.Component<ReadingGroupComponentProps> {\n    render() {\n        const editionNames = this.props.group.editions.map((ed) => ed.name);\n        const title = editionNames.join(', ')\n        const dots = this.props.group.editions.map((ed) => <EditionDot small={true} edition={ed} key={ed.code}/>);\n\n        let content;\n        if (this.props.group.element) {\n            const converter = new TeiConverter(false, true);\n            content = converter.teiToReactElement(this.props.group.element);    \n        } else {\n            content = (<div className='empty-group'>[Edition is missing here]</div>);\n        }\n\n        return (\n            <div className='reading-group'>\n                <div className='reading-group-dots'>{ dots }</div>\n                <div className='reading-group-title'>{ title }</div>\n                <div className='reading-group-content'>\n                    { content }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ReadingGroupComponent;","import { Apparatus } from \"../../data/spine\";\nimport React from \"react\";\nimport { Edition } from \"../../data/edition\";\nimport ReadingGroupComponent from \"./ReadingGroupComponent\";\n\ninterface VariationProps {\n    app: Apparatus;\n    edition: Edition;\n}\n\nclass Variation extends React.Component <VariationProps> {\n    render() {\n        const groups = this.props.app.groups.map((grp) => (\n            <ReadingGroupComponent group={grp} key={grp.groupId}/>\n        ))\n        return (\n            <div className=\"app-list\">\n                <hr className=\"app-list-to-divider\"/>\n                { groups }\n            </div>\n        )\n    }\n}\n\nexport default Variation;","import React from 'react';\nimport EditionSelector from '../PageLayout/EditionSelector';\nimport TeiRendering from '../tei/TeiContainer';\nimport FvStore from '../../data/store';\nimport { Edition, Chunk } from '../../data/edition';\nimport Paging from '../PageLayout/Paging';\nimport Header from '../PageLayout/Header';\nimport OptionsSelector from '../PageLayout/OptionsSelector';\nimport { Apparatus } from '../../data/spine';\nimport Variation from '../Variations/Variation';\n\ninterface ViewerProperties { }\n\ninterface ViewerState {\n    loading: boolean,\n    chunk?: Chunk,\n    chunkNumber: number,\n    edition?: Edition,\n    showVariations: boolean,\n    showText: boolean,\n    app: Apparatus | undefined,\n}\n\nclass Viewer extends React.Component <ViewerProperties, ViewerState> {\n    state = {\n        loading: false,\n        chunk: undefined as Chunk | undefined,\n        edition: undefined as Edition | undefined,\n        chunkNumber: 0,\n\n        showVariations: true,\n        showText: true,\n        app: undefined,\n    }\n\n    \n    onNewChunk = async (chunkNumber: number) => {\n        this.setState( {loading: true, chunk: undefined } );\n        \n        if (!this.state.edition) {\n            throw new Error(\"Cannot get chunk if there is no an edition\");\n        }\n        const chunk = await Chunk.load(this.state.edition, chunkNumber);\n        this.setState( {loading: false, chunk, chunkNumber: chunk.chunkNumber, app: undefined } );\n    }\n\n    onNewEdition = (edition: Edition) => {\n        this.setState( { edition, app: undefined } );\n    }\n    onVariation = (show: boolean) => {\n        this.setState( { showVariations: show } );\n    }\n    onText = (show: boolean) => {\n        this.setState( { showText: show } );\n    }\n\n    onAppClick = (app: Apparatus) => {\n        this.setState( {app} );\n    }\n\n    render() {\n        let viewerClasses = 'viewer__cols';\n        if (this.state.showText) {\n            viewerClasses += ' view-text';\n        }\n        if (this.state.showVariations) {\n            viewerClasses += ' view-variations';\n        }\n\n        return (\n            <section id='viewer'>\n                <div id='viewer__controls'>\n                    <EditionSelector\n                    key={0}\n                    editions={FvStore.editions} \n                    edition={this.state.edition!}\n                    onEditionSelected={this.onNewEdition}\n                    />\n\n                    <Paging\n                    key={1}\n                    edition={this.state.edition} \n                    chunk={this.state.chunkNumber}\n                    onChunkSelected={this.onNewChunk} />\n\n                    <OptionsSelector \n                    showVariations={this.state.showVariations}\n                    showText={this.state.showText}\n                    onVariationChanged={this.onVariation}\n                    onTextChanged={this.onText}\n                    />\n                </div>\n                \n                <Header\n                edition={this.state.edition} />\n\n                <div id='viewer__contents' className={viewerClasses}>\n                    <aside id=\"viewer__marginalia\">\n                    </aside>\n                    { this.state.chunk && this.state.edition ? \n                    <TeiRendering\n                    chunk={this.state.chunk}\n                    edition={this.state.edition}\n                    showVariations={this.state.showVariations}\n                    showText={this.state.showText}\n                    onAppClick={this.onAppClick}/> : <div></div>}\n                    <aside id=\"viewer_variations\">\n                        { this.state.app ? <Variation app={this.state.app!} edition={this.state.edition!}/> : '' }\n                    </aside>\n                </div>\n\n                <hr className='line' />\n                <footer id=\"viewer_pagination_controls\">\n                    <EditionSelector\n                    key={2}\n                    editions={FvStore.editions} \n                    edition={this.state.edition!}\n                    onEditionSelected={this.onNewEdition}\n                    />\n                    <Paging\n                    key={3}\n                    edition={this.state.edition} \n                    chunk={this.state.chunkNumber}\n                    onChunkSelected={this.onNewChunk} />\n                </footer>\n            </section>\n        );\n    }\n}\n\nexport default Viewer;\n","import React from 'react';\nimport Viewer from './components/Viewer/Viewer';\nimport './styles/sass/style.sass';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <Viewer />\n        </div>\n      </div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}