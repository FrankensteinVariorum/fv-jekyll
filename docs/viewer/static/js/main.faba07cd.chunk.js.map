{"version":3,"sources":["images/manicule.svg","images/sgalogo.png","images/intensity_legend.svg","data/xml-cache.ts","data/json-cache.ts","tei-processing/helpers.ts","data/edition.ts","data/spine.ts","data/annotation.ts","data/store.ts","components/helpers/EditionDot.tsx","components/PageLayout/EditionSelector.tsx","components/tei/TeiReactElement.tsx","components/tei/TeiReactText.tsx","components/tei/TeiAppWrapper.tsx","components/tei/TeiAnnotationWrapper.tsx","tei-processing/tei-converter.ts","components/tei/TeiContainer.tsx","components/PageLayout/Paging.tsx","components/PageLayout/Header.tsx","components/PageLayout/OptionsSelector.tsx","components/Variations/ReadingGroupComponent.tsx","components/Variations/Variation.tsx","components/Annotations/Annotations.tsx","components/Viewer/Viewer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","XmlCache","Object","classCallCheck","this","_xmls","_promises","Map","url","_this","has","Promise","resolve","get","promise","fetchXML","set","then","delete","xml","DOMParser","parseFromString","fetch","response","text","doc","parseXML","documentCount","JsonCache","_jsons","fetchJson","json","constructor","Array","evaluateXPath","xpath","resolver","createNSResolver","documentElement","evaluate","err","console","error","concat","xpathResult","nodes","node","iterateNext","push","findElementByXmlId","xmlId","attrName","startsWith","idResults","length","Error","Edition","code","name","chunks","createClass","key","value","chunkId","chunkStr","_getXML","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","FvStore","cache","getXML","getChunkUrl","abrupt","sent","stop","_x","apply","arguments","document","EditionWithBody","_Edition","possibleConstructorReturn","getPrototypeOf","inherits","getElementsByTagName","MSEdition","_Edition2","map","n","Chunk","edition","chunkNumber","tei","spine","annotation","mainRoots","marginRoots","variations","getMainRootElements","getMarginRootElements","appRef","app","apps","find","id","_load","_callee2","chunk","_context2","getSpine","initialize","getAnnotation","_x2","_x3","ReadingGroup","apparatus","grpElement","groupId","editions","element","pointers","getAttribute","fillEditions","fillPointers","buildElement","from","rdg","substr","ec","ed","filter","ptr","implementation","createDocument","group","createElement","children","dereferenced","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","clone","cloneNode","appendChild","return","Apparatus","_groups","idAttr","attributes","getNamedItem","nAttr","parseInt","parsePointers","_this2","groupElements","grp","_this3","el","parsePointer","ptrElement","rdgElement","parentNode","tagName","witAttr","editionCode","getEdition","rdgGroupElement","grpIdAttr","targetAttr","parts","split","referencedUrl","referencedTarget","groups","indexOf","Spine","_apps","_xml","_initialized","_initializationPromise","_this4","innerInitialize","_innerInitialize","parseApps","fetchAllReferences","rewriteStringRanges","dereferencePointers","addBackPointers","buildGroupsInApps","_parseApps","_callee3","appElements","_context3","_fetchAllReferences","_callee4","allUrls","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","urls","unique","promises","_context4","t0","finish","Set","all","_rewriteStringRanges","_callee5","re","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_loop","_iterator3","_step3","_this5","_context6","_wrapRegExp","start","invalidPointers","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","match","stringRange","validPointers","_context5","rewriteStringRange","add","t1","delegateYield","_rewriteStringRange","_callee6","range","targetDoc","targetNodes","targetElement","mockIdAttr","_context7","mockElementCount","setAttribute","_dereferencePointers","_callee7","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_loop2","_iterator5","_step5","_context9","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","_document","_context8","outerHTML","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","visitedApp","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","firstInApp","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","buildGroups","Annotation","_json","getJSON","_getJSON","jcache","_parsePointers","s","target","val","FvStoreClass","spines","annotations","i","sp","instance","EditionDot","classes","props","small","react_default","className","React","Component","EditionSelector","state","availableEditions","selectedEdition","componentDidMount","index","label","helpers_EditionDot","setState","onEditionSelected","editionChanged","selectedOption","warn","prevProps","option","react_select_browser_esm","onChange","options","TeiReactElement","tag","closingTag","htmlTag","data-tei-tag","ReactHtmlParser","TeiReactText","showText","TeiAppWrapper","onClick","showVariations","onAppClick","intensity","getOtherGroups","dotElements","groupDots","dotClasses","data-app","TeiAnnotationWrapper","e","showAnnotations","onAnnotationClick","stopPropagation","Fragment","style","position","width","cursor","left","marginTop","display","alignItems","borderBottom","paddingRight","fontStyle","src","manicule","TeiConverter","teiTag","nodeAttributes","valueProps","nodeName","nodeValue","reactChildren","hasChildNodes","childNodes","childNode","childElement","nodeType","teiToReactElement","textContent","trim","teiProps","buildProperties","getHtmlTag","reactElement","getApp","TeiRendering","elements","getTeiObjects","converter","root","Paging","chunkIndex","availableChunks","disablePrev","disableNext","onChunkChanged","findIndex","opt","toString","onChunkSelected","updateChunk","delta","newChunk","newOption","c","prevChunkIndex","firstChunk","disabled","Header","sga","href","sgalogo","alt","OptionsSelector","onVariationChanged","newShow","onAnnotationChanged","onTextChanged","newShowText","type","checked","ReadingGroupComponent","content","title","join","dots","Variation","Variations_ReadingGroupComponent","Annotations","annoData","selector","lineHeight","color","prefix","fontWeight","exact","suffix","Viewer","loading","onNewChunk","load","onNewEdition","onVariation","show","onAnnotation","onText","PageLayout_EditionSelector","PageLayout_Paging","PageLayout_OptionsSelector","PageLayout_Header","TeiContainer","Variations_Variation","components_Annotations_Annotations","App","components_Viewer_Viewer","Boolean","window","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oSCMnBC,aAKjB,SAAAA,IAAsBC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAG,KAJbC,WAIY,EAAAD,KAHbE,eAGa,EACjBF,KAAKC,MAAQ,IAAIE,IACjBH,KAAKE,UAAY,IAAIC,uDAGXC,GAAgC,IAAAC,EAAAL,KAG1C,GAAIA,KAAKC,MAAMK,IAAIF,GACf,OAAOG,QAAQC,QAAQR,KAAKC,MAAMQ,IAAIL,IAG1C,GAAIJ,KAAKE,UAAUI,IAAIF,GACnB,OAAOJ,KAAKE,UAAUO,IAAIL,GAG9B,IAAMM,EAAUV,KAAKW,SAASP,GAK9B,OAJAJ,KAAKE,UAAUU,IAAIR,EAAKM,GACxBA,EAAQG,KAAK,WACTR,EAAKH,UAAUY,OAAOV,KAEnBM,mCAGMK,GAIb,OAHe,IAAIC,WACAC,gBAAgBF,EAAK,qFAKrBX,6FACIc,MAAMd,iBAAvBe,kBACYA,EAASC,qBAArBL,SAEAM,EAAMrB,KAAKsB,SAASP,GAC1Bf,KAAKC,MAAMW,IAAIR,EAAKiB,qBAEbA,+GA3CMxB,EAGF0B,cAAgB,MCPdC,aAKjB,SAAAA,IAAsB1B,OAAAC,EAAA,EAAAD,CAAAE,KAAAwB,GAAAxB,KAJbyB,YAIY,EAAAzB,KAHbE,eAGa,EACjBF,KAAKyB,OAAS,IAAItB,IAClBH,KAAKE,UAAY,IAAIC,wDAGVC,GAA8B,IAAAC,EAAAL,KAGzC,GAAIA,KAAKyB,OAAOnB,IAAIF,GAChB,OAAOG,QAAQC,QAAQR,KAAKyB,OAAOhB,IAAIL,IAG3C,GAAIJ,KAAKE,UAAUI,IAAIF,GACnB,OAAOJ,KAAKE,UAAUO,IAAIL,GAG9B,IAAMM,EAAUV,KAAK0B,UAAUtB,GAK/B,OAJAJ,KAAKE,UAAUU,IAAIR,EAAKM,GACxBA,EAAQG,KAAK,WACTR,EAAKH,UAAUY,OAAOV,KAEnBM,4EAGaN,2FACGc,MAAMd,iBAAvBe,kBACWA,EAASQ,qBAAtBA,UAEKC,cAAgBC,QACrBF,EAAO,CAAEA,SAGb3B,KAAKyB,OAAOb,IAAIR,EAAKuB,qBAEdA,+GCxCR,SAASG,EAAcT,EAAeU,GACzC,IAAMC,EAAWX,EAAIY,iBAAiBZ,EAAIa,iBAC1C,IACIb,EAAIc,SAASJ,EAAOV,EAAKW,GAC3B,MAAMI,GACJC,QAAQC,MAAR,uBAAAC,OAAqCR,EAArC,aAAuDK,GAM3D,IAJA,IAAMI,EAAcnB,EAAIc,SAASJ,EAAOV,EAAKW,GACvCS,EAAgB,GAElBC,EAAOF,EAAYG,cACjBD,GACFD,EAAMG,KAAKF,GACXA,EAAOF,EAAYG,cAGvB,OAAOF,EAGJ,SAASI,EAAmBxB,EAAeyB,GAC9C,IAAMC,EAAWD,EAAME,WAAW,QAAU,UAAY,SAElDC,EAAYnB,EAAcT,EADrB,QAAAkB,OAAWQ,EAAX,MAAAR,OAAwBO,EAAxB,OAGX,GAAyB,IAArBG,EAAUC,OACV,MAAMC,MAAK,WAAAZ,OAAYO,EAAZ,mCACR,GAAIG,EAAUC,OAAS,EAC1B,MAAMC,MAAK,WAAAZ,OAAYO,EAAZ,sCAEf,OAAOG,EAAU,GD5BAzB,EAGFD,cAAgB,EEA5B,IAAe6B,EAAtB,WAKI,SAAAA,EAAYC,EAAcC,EAAcC,GAAmBzD,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,GAAApD,KAJ3CqD,KAAe,GAI2BrD,KAH1CsD,KAAe,GAG2BtD,KAF1CuD,OAAmB,GAG/BvD,KAAKqD,KAAOA,EACZrD,KAAKsD,KAAOA,EACZtD,KAAKuD,OAASA,EARtB,OAAAzD,OAAA0D,EAAA,EAAA1D,CAAAsD,EAAA,EAAAK,IAAA,cAAAC,MAAA,SAW0BC,GAClB,IAAMC,EAAWD,EAAU,GAAV,IAAApB,OAAmBoB,GAAnB,GAAApB,OAAkCoB,GAGnD,MAFS,qFAAApB,OAAwFvC,KAAKqD,KAA7F,MAAAd,OAAsGqB,EAAtG,UAbjB,CAAAH,IAAA,SAAAC,MAAA,eAAAG,EAAA/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAAC,EAkBwBP,GAlBxB,OAAAI,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAmBqBC,EAAQC,MAAMC,OAAOzE,KAAK0E,YAAYf,IAnB3D,cAAAS,EAAAO,OAAA,SAAAP,EAAAQ,MAAA,wBAAAR,EAAAS,SAAAX,EAAAlE,SAAA,gBAAA8E,GAAA,OAAAjB,EAAAkB,MAAA/E,KAAAgF,YAAA,KAAAvB,IAAA,wBAAAC,MAAA,SAuBiCuB,GACzB,MAAO,OAxBf7B,EAAA,GA4Ba8B,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAApF,OAAAC,EAAA,EAAAD,CAAAE,KAAAkF,GAAApF,OAAAsF,EAAA,EAAAtF,CAAAE,KAAAF,OAAAuF,EAAA,EAAAvF,CAAAoF,GAAAH,MAAA/E,KAAAgF,YAAA,OAAAlF,OAAAwF,EAAA,EAAAxF,CAAAoF,EAAAC,GAAArF,OAAA0D,EAAA,EAAA1D,CAAAoF,EAAA,EAAAzB,IAAA,sBAAAC,MAAA,SAC+BuB,GACvB,IACI,MAAO,CAACA,EAASM,qBAAqB,QAAQ,IAChD,MAAMnD,GAEJ,MADAC,QAAQC,MAAR,iCAAAC,OAA+CvC,KAAKqD,KAApD,MAAAd,OAA6DH,IACvD,IAAIe,MAAM,kCAN5B+B,EAAA,CAAqC9B,GAWxBoC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA1F,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,GAAA1F,OAAAsF,EAAA,EAAAtF,CAAAE,KAAAF,OAAAuF,EAAA,EAAAvF,CAAA0F,GAAAT,MAAA/E,KAAAgF,YAAA,OAAAlF,OAAAwF,EAAA,EAAAxF,CAAA0F,EAAAC,GAAA3F,OAAA0D,EAAA,EAAA1D,CAAA0F,EAAA,EAAA/B,IAAA,sBAAAC,MAAA,SAC+BuB,GAGvB,OADcnD,EAAcmD,EADd,4BAEDS,IAAI,SAACC,GAAD,OAAOA,MAJhC,CAAAlC,IAAA,wBAAAC,MAAA,SAOiCuB,GAGzB,OADcnD,EAAcmD,EADd,mCAEDS,IAAI,SAACC,GAAD,OAAOA,QAVhCH,EAAA,CAA+BpC,GAelBwC,EAAb,WASI,SAAAA,EAAoBC,EAAkBC,EAAqBC,EAAeC,EAAcC,GAAqCnG,OAAAC,EAAA,EAAAD,CAAAE,KAAA4F,GAAA5F,KAR7G6F,aAQ4G,EAAA7F,KAP5G8F,iBAO4G,EAAA9F,KAN5G+F,SAM4G,EAAA/F,KAL5GkG,eAK4G,EAAAlG,KAJ5GmG,iBAI4G,EAAAnG,KAH5GoG,gBAG4G,EAAApG,KAF5GiG,gBAE4G,EACxHjG,KAAK6F,QAAUA,EACf7F,KAAK8F,YAAcA,EACnB9F,KAAK+F,IAAMA,EACX/F,KAAKoG,WAAaJ,EAClBhG,KAAKiG,WAAaA,EAClBjG,KAAKkG,UAAYL,EAAQQ,oBAAoBN,GAC7C/F,KAAKmG,YAAcN,EAAQS,sBAAsBP,GAhBzD,OAAAjG,OAAA0D,EAAA,EAAA1D,CAAA8F,EAAA,EAAAnC,IAAA,SAAAC,MAAA,SAqCkB6C,GACV,IAAMC,EAAMxG,KAAKoG,WAAWK,KAAKC,KAAK,SAAC1C,GAAD,OAAOA,EAAE2C,KAAOJ,IACtD,IAAIC,EACA,MAAM,IAAIrD,MAAJ,oBAAAZ,OAA8BgE,IAExC,OAAOC,KA1Cf,EAAA/C,IAAA,OAAAC,MAAA,eAAAkD,EAAA9G,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAA4C,EAmB6BhB,EAAkBC,GAnB/C,IAAAb,EAAAe,EAAAC,EAAAa,EAAA,OAAA/C,EAAAC,EAAAG,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EAoB+BuB,EAAQpB,OAAOqB,GApB9C,cAoBcb,EApBd8B,EAAAnC,KAAAmC,EAAAzC,KAAA,EAqB4BC,EAAQyC,SAASlB,GArB7C,cAqBcE,EArBde,EAAAnC,KAAAmC,EAAAzC,KAAA,EAsBc0B,EAAMiB,aAtBpB,UA0B6B,OAAjBpB,EAAQxC,KA1BpB,CAAA0D,EAAAzC,KAAA,gBAAAyC,EAAAzC,KAAA,GA2B+BC,EAAQ2C,cAAcrB,EAAQxC,KAAMyC,GA3BnE,eA2BYG,EA3BZc,EAAAnC,KAAAmC,EAAAzC,KAAA,GA4BkB2B,EAAWgB,aA5B7B,eA+BcH,EAAQ,IAAIlB,EAAMC,EAASC,EAAab,EAAUe,EAAOC,GA/BvEc,EAAApC,OAAA,SAkCemC,GAlCf,yBAAAC,EAAAlC,SAAAgC,MAAA,gBAAAM,EAAAC,GAAA,OAAAR,EAAA7B,MAAA/E,KAAAgF,YAAA,MAAAY,EAAA,60BCvCO,IAAMyB,EAAb,WAQI,SAAAA,EAAYC,EAA8BC,GAAsBzH,OAAAC,EAAA,EAAAD,CAAAE,KAAAqH,GAAArH,KAAtBuH,aAAqBvH,KAP/CwH,aAO+C,EAAAxH,KAN/CyH,cAM+C,EAAAzH,KAL/CsH,eAK+C,EAAAtH,KAJ/C0H,aAI+C,EAAA1H,KAF9C2H,cAE8C,EAC3D3H,KAAKwH,QAAUD,EAAWK,aAAa,UACvC5H,KAAKsH,UAAYA,EACjBtH,KAAKyH,SAAWzH,KAAK6H,eACrB7H,KAAK2H,SAAW3H,KAAK8H,eACrB9H,KAAK0H,QAAU1H,KAAK+H,eAb5B,OAAAjI,OAAA0D,EAAA,EAAA1D,CAAAuH,EAAA,EAAA5D,IAAA,eAAAC,MAAA,WAqBQ,OAJoB7B,MAAMmG,KAAKhI,KAAKuH,WAAWhC,qBAAqB,QACnCG,IAAI,SAACuC,GAAD,OAASA,EAAIL,aAAa,OAAQM,OAAO,KAChDxC,IAAI,SAACyC,GAAD,OAAQ5D,EAAQkD,SAASf,KAAK,SAAC0B,GAAD,OAAQA,EAAG/E,OAAS8E,QAnB5F,CAAA1E,IAAA,eAAAC,MAAA,WAwB2B,IAAArD,EAAAL,KAEb6F,EAAU7F,KAAKyH,SAAS,GAC9B,OAAOzH,KAAKsH,UAAUK,SAASU,OAAO,SAACC,GAAD,OAASA,EAAId,UAAYnH,EAAKmH,SAAWc,EAAIzC,UAAYA,MA3BvG,CAAApC,IAAA,eAAAC,MAAA,WAiCQ,GAA6B,IAAzB1D,KAAK2H,SAASzE,OAAlB,CAIA,IAAM7B,EAAM4D,SAASsD,eAAeC,eAAe,KAAM,KAAM,MACzDC,EAAQpH,EAAIqH,cAAc,UAC1BC,EAAW3I,KAAK2H,SAASjC,IAAI,SAAC4C,GAAD,OAASA,EAAIM,eAT7BC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAUnB,QAAAC,EAAAC,EAAmBP,EAAnBQ,OAAAC,cAAAP,GAAAI,EAAAC,EAAA5E,QAAA+E,MAAAR,GAAA,EAA6B,KACnBS,EADmBL,EAAAvF,MACL6F,WAAU,GAC9Bd,EAAMe,YAAYF,IAZH,MAAAlH,GAAA0G,GAAA,EAAAC,EAAA3G,EAAA,YAAAyG,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAgBnB,OAFA1H,EAAImI,YAAYf,GAETA,OA9CfpB,EAAA,GAkDaqC,EAAb,WAQI,SAAAA,EAAYhC,GAAmB5H,OAAAC,EAAA,EAAAD,CAAAE,KAAA0J,GAAA1J,KAPf2G,QAOc,EAAA3G,KANd2F,OAMc,EAAA3F,KALd0H,aAKc,EAAA1H,KAHvB2H,cAGuB,EAAA3H,KAFtB2J,aAEsB,EAC1B3J,KAAK0H,QAAUA,EAEf,IAAMkC,EAASlC,EAAQmC,WAAWC,aAAa,UAC/C,IAAKF,EACD,MAAM,IAAIzG,MAAM,4BAEpBnD,KAAK2G,GAAKiD,EAAOlG,MAEjB,IAAMqG,EAAQrC,EAAQmC,WAAWC,aAAa,KAC9C9J,KAAK2F,EAAIoE,EAAQC,SAASD,EAAMrG,YAASsF,EAEzChJ,KAAK2H,SAAW3H,KAAKiK,gBACrBjK,KAAK2J,QAAU,GArBvB,OAAA7J,OAAA0D,EAAA,EAAA1D,CAAA4J,EAAA,EAAAjG,IAAA,cAAAC,MAAA,WA0ByB,IAAAwG,EAAAlK,KACXmK,EAAgBtI,MAAMmG,KAAKhI,KAAK0H,QAAQnC,qBAAqB,WAEnEvF,KAAK2J,QAAU9H,MAAMmG,KAAKmC,GAAezE,IAAI,SAAC0E,GAAD,OAAS,IAAI/C,EAAa6C,EAAME,OA7BrF,CAAA3G,IAAA,gBAAAC,MAAA,WAgC4B,IAAA2G,EAAArK,KAIpB,OAHoB6B,MAAMmG,KAAKhI,KAAK0H,QAAQnC,qBAAqB,QACxCG,IAAI,SAAC4E,GAAD,OAAQD,EAAKE,aAAaD,OAlC/D,CAAA7G,IAAA,eAAAC,MAAA,SAuCyB8G,GACjB,IAAMC,EAAaD,EAAWE,WAC9B,IAAKD,GAAqC,QAAvBA,EAAWE,QAC1B,MAAM,IAAIxH,MAAJ,gCAEV,IAAMyH,EAAUH,EAAWZ,WAAWC,aAAa,OACnD,IAAKc,EACD,MAAM,IAAIzH,MAAM,+CAEpB,IACI0C,EADEgF,EAAcD,EAAQlH,MAAMwE,OAAO,GAEzC,IACIrC,EAAUtB,EAAQuG,WAAWD,GAC/B,MAAMzI,GACJ,MAAM,IAAIe,MAAJ,6BAAAZ,OAAuCqI,EAAQlH,QAGzD,IAAMqH,EAAkBN,EAAWC,WACnC,IAAIK,GAA+C,WAA5BA,EAAgBJ,QACnC,MAAM,IAAIxH,MAAJ,2CAEV,IAAM6H,EAAYD,EAAgBlB,WAAWC,aAAa,UAC1D,IAAKkB,EACD,MAAM,IAAI7H,MAAM,0BAEpB,IAAMqE,EAAUwD,EAAUtH,MAEpBuH,EAAaT,EAAWX,WAAWC,aAAa,UACtD,IAAKmB,EACD,MAAM,IAAI9H,MAAJ,0CAGV,IAAM+H,EAAQD,EAAWvH,MAAMyH,MAAM,KACrC,GAAqB,IAAjBD,EAAMhI,OACN,MAAM,IAAIC,MAAJ,UAAAZ,OAAoB0I,EAAWvH,MAA/B,+CAGV,MAAO,CACH8G,aACA3E,UACA2B,UACA4D,cAAeF,EAAM,GACrBG,iBAAkBH,EAAM,MAjFpC,CAAAzH,IAAA,iBAAAC,MAAA,SAqF0B0E,GAElB,OAAOpI,KAAKsL,OAAOjD,OAAO,SAAC+B,GAAD,OAAuC,IAA9BA,EAAI3C,SAAS8D,QAAQnD,OAvFhE,CAAA3E,IAAA,SAAAhD,IAAA,WAwB0B,OAAOT,KAAK2J,YAxBtCD,EAAA,GAkGa8B,EAAb,WAQI,SAAAA,EAAY1E,GAAgBhH,OAAAC,EAAA,EAAAD,CAAAE,KAAAwL,GAAAxL,KAPZ8F,iBAOW,EAAA9F,KANnByL,WAMmB,EAAAzL,KALnB0L,UAKmB,EAAA1L,KAJnB2L,cAAe,EAII3L,KAHnB4L,4BAGmB,EACvB5L,KAAK8F,YAAcgB,EAT3B,OAAAhH,OAAA0D,EAAA,EAAA1D,CAAA0L,EAAA,EAAA/H,IAAA,aAAAC,MAAA,WAYuC,IAAAmI,EAAA7L,KAG/B,OAAGA,KAAK4L,uBACG5L,KAAK4L,wBAGhB5L,KAAK4L,uBAAyB5L,KAAK8L,kBACnC9L,KAAK4L,uBAAuB/K,KAAK,WAC7BgL,EAAKD,4BAAyB5C,IAE3BhJ,KAAK4L,0BAvBpB,CAAAnI,IAAA,kBAAAC,MAAA,eAAAqI,EAAAjM,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WA2BWtE,KAAK2L,aA3BhB,CAAAvH,EAAAE,KAAA,eAAAF,EAAAO,OAAA,wBAAAP,EAAAE,KAAA,EA+B0BtE,KAAKyE,SA/B/B,cA+BQzE,KAAK0L,KA/BbtH,EAAAQ,KAAAR,EAAAE,KAAA,EAiCctE,KAAKgM,YAjCnB,cAAA5H,EAAAE,KAAA,EAkCctE,KAAKiM,qBAlCnB,cAAA7H,EAAAE,KAAA,GAmCctE,KAAKkM,sBAnCnB,eAAA9H,EAAAE,KAAA,GAoCctE,KAAKmM,sBApCnB,QAqCQnM,KAAKoM,kBACLpM,KAAKqM,oBAELrM,KAAK2L,cAAe,EAxC5B,yBAAAvH,EAAAS,SAAAX,EAAAlE,SAAA,yBAAA+L,EAAAhH,MAAA/E,KAAAgF,YAAA,KAAAvB,IAAA,SAAAC,MAAA,eAAAG,EAAA/D,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAA4C,IAAA,IAAAjD,EAAAxD,EAAA6E,EAAA,OAAAlB,EAAAC,EAAAG,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cA4CcV,EAAW5D,KAAK8F,YAAc,GAAnB,IAAAvD,OAA4BvC,KAAK8F,aAAjC,GAAAvD,OAAoDvC,KAAK8F,aACpE1F,EA7Cd,0FAAAmC,OA6C8GqB,EA7C9G,QAAAmD,EAAAzC,KAAA,EA+C+BC,EAAQC,MAAMC,OAAOrE,GA/CpD,cA+Cc6E,EA/Cd8B,EAAAnC,KAAAmC,EAAApC,OAAA,SAgDeM,GAhDf,wBAAA8B,EAAAlC,SAAAgC,EAAA7G,SAAA,yBAAA6D,EAAAkB,MAAA/E,KAAAgF,YAAA,KAAAvB,IAAA,YAAAC,MAAA,eAAA4I,EAAAxM,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAAsI,IAAA,IAAAC,EAAA/F,EAAA,OAAA1C,EAAAC,EAAAG,KAAA,SAAAsI,GAAA,cAAAA,EAAApI,KAAAoI,EAAAnI,MAAA,UAoDYtE,KAAK0L,KApDjB,CAAAe,EAAAnI,KAAA,cAqDkB,IAAInB,MAAM,wDArD5B,OAwDcqJ,EAAc3K,MAAMmG,KAAKhI,KAAK0L,KAAKnG,qBAAqB,QACxDkB,EAAO+F,EAAY9G,IAAI,SAACc,GAAD,OAAS,IAAIkD,EAAUlD,KACpDxG,KAAKyL,MAAQhF,EA1DrB,wBAAAgG,EAAA5H,SAAA0H,EAAAvM,SAAA,yBAAAsM,EAAAvH,MAAA/E,KAAAgF,YAAA,KAAAvB,IAAA,qBAAAC,MAAA,eAAAgJ,EAAA5M,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAA0I,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzG,EAAA0G,EAAAC,EAAAC,EAAA,OAAArJ,EAAAC,EAAAG,KAAA,SAAAkJ,GAAA,cAAAA,EAAAhJ,KAAAgJ,EAAA/I,MAAA,OAwEQ,IAFIsI,EAAU,GAtEtBC,GAAA,EAAAC,GAAA,EAAAC,OAAA/D,EAAAqE,EAAAhJ,KAAA,EAwEQ2I,EAAehN,KAAKyG,KAApB0C,OAAAC,cAAAyD,GAAAI,EAAAD,EAAA1I,QAAA+E,MAAAwD,GAAA,EAAQrG,EAAkByG,EAAAvJ,MAChBwJ,EAAO1G,EAAImB,SAASjC,IAAI,SAAC4C,GAAD,OAASA,EAAI8C,gBAC3CwB,EAAUA,EAAQrK,OAAO2K,GA1ErCG,EAAA/I,KAAA,gBAAA+I,EAAAhJ,KAAA,EAAAgJ,EAAAC,GAAAD,EAAA,SAAAP,GAAA,EAAAC,EAAAM,EAAAC,GAAA,QAAAD,EAAAhJ,KAAA,GAAAgJ,EAAAhJ,KAAA,GAAAwI,GAAA,MAAAG,EAAAvD,QAAAuD,EAAAvD,SAAA,WAAA4D,EAAAhJ,KAAA,IAAAyI,EAAA,CAAAO,EAAA/I,KAAA,eAAAyI,EAAA,eAAAM,EAAAE,OAAA,mBAAAF,EAAAE,OAAA,mBA6EcJ,EAAStL,MAAMmG,KAAK,IAAIwF,IAAYZ,IACpCQ,EAAWD,EAAOzH,IAAI,SAACtF,GAAD,OAASmE,EAAQC,MAAMC,OAAOrE,KA9ElEiN,EAAA/I,KAAA,GA+Ec/D,QAAQkN,IAAIL,GA/E1B,yBAAAC,EAAAxI,SAAA8H,EAAA3M,KAAA,uDAAA0M,EAAA3H,MAAA/E,KAAAgF,YAAA,KAAAvB,IAAA,sBAAAC,MAAA,eAAAgK,EAAA5N,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAA0J,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnO,KAAA,OAAA+D,EAAAC,EAAAG,KAAA,SAAAiK,GAAA,cAAAA,EAAA/J,KAAA+J,EAAA9J,MAAA,OAsFcsJ,EAtFdS,EAsFmB,qCAtFnB,CAAAtM,MAAA,EAAAuM,MAAA,EAAApL,OAAA,IAAA2K,GAAA,EAAAC,GAAA,EAAAC,OAAA/E,EAAAoF,EAAA/J,KAAA,EAAA2J,EAAAjK,EAAAC,EAAAC,KAAA,SAAA+J,IAAA,IAAAxH,EAAA+H,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtG,EAAAuG,EAAAC,EAAAC,EAAA,OAAAhL,EAAAC,EAAAG,KAAA,SAAA6K,GAAA,cAAAA,EAAA3K,KAAA2K,EAAA1K,MAAA,OAwFgBkC,EAxFhB0H,EAAAxK,MAyFkB6K,EAAkB,IAAIf,IAzFxCgB,GAAA,EAAAC,GAAA,EAAAC,OAAA1F,EAAAgG,EAAA3K,KAAA,EAAAsK,EA0F2BnI,EAAImB,SA1F/BwB,OAAAC,YAAA,UAAAoF,GAAAI,EAAAD,EAAArK,QAAA+E,KAAA,CAAA2F,EAAA1K,KAAA,YA0FoBgE,EA1FpBsG,EAAAlL,QA2FsBmL,EAAQvG,EAAI+C,iBAAiBwD,MAAMjB,IA3FzD,CAAAoB,EAAA1K,KAAA,gBA6F0BwK,EAAc,CAChB/M,MAAO8M,EAAMvD,OAAQvJ,MACrBuM,MAAOtE,SAAS6E,EAAMvD,OAAQgD,OAC9BpL,OAAQ8G,SAAS6E,EAAMvD,OAAQpI,SAhGvD8L,EAAA3K,KAAA,GAAA2K,EAAA1K,KAAA,GAmG8B6J,EAAKc,mBAAmB3G,EAAKwG,GAnG3D,QAAAE,EAAA1K,KAAA,iBAAA0K,EAAA3K,KAAA,GAAA2K,EAAA1B,GAAA0B,EAAA,UAqGwBT,EAAgBW,IAAI5G,GArG5C,QAAAkG,GAAA,EAAAQ,EAAA1K,KAAA,gBAAA0K,EAAA1K,KAAA,iBAAA0K,EAAA3K,KAAA,GAAA2K,EAAAG,GAAAH,EAAA,SAAAP,GAAA,EAAAC,EAAAM,EAAAG,GAAA,QAAAH,EAAA3K,KAAA,GAAA2K,EAAA3K,KAAA,GAAAmK,GAAA,MAAAG,EAAAlF,QAAAkF,EAAAlF,SAAA,WAAAuF,EAAA3K,KAAA,IAAAoK,EAAA,CAAAO,EAAA1K,KAAA,eAAAoK,EAAA,eAAAM,EAAAzB,OAAA,mBAAAyB,EAAAzB,OAAA,YA0GkBwB,EAAgBvI,EAAImB,SAASU,OAAO,SAACC,GAAD,OAAUiG,EAAgBjO,IAAIgI,KACxE9B,EAAImB,SAAWoH,EA3G3B,yBAAAC,EAAAnK,SAAAmJ,EAAA,2CAAAC,EAwFuBjO,KAAKyG,KAxF5B0C,OAAAC,YAAA,UAAAyE,GAAAK,EAAAD,EAAA3J,QAAA+E,KAAA,CAAA+E,EAAA9J,KAAA,gBAAA8J,EAAAgB,cAAApB,IAAA,eAAAH,GAAA,EAAAO,EAAA9J,KAAA,gBAAA8J,EAAA9J,KAAA,iBAAA8J,EAAA/J,KAAA,GAAA+J,EAAAe,GAAAf,EAAA,SAAAN,GAAA,EAAAC,EAAAK,EAAAe,GAAA,QAAAf,EAAA/J,KAAA,GAAA+J,EAAA/J,KAAA,GAAAwJ,GAAA,MAAAI,EAAAxE,QAAAwE,EAAAxE,SAAA,WAAA2E,EAAA/J,KAAA,IAAAyJ,EAAA,CAAAM,EAAA9J,KAAA,eAAAyJ,EAAA,eAAAK,EAAAb,OAAA,mBAAAa,EAAAb,OAAA,6BAAAa,EAAAvJ,SAAA8I,EAAA3N,KAAA,wDAAA0N,EAAA3I,MAAA/E,KAAAgF,YAAA,KAAAvB,IAAA,qBAAAC,MAAA,eAAA2L,EAAAvP,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAAqL,EA+GqChH,EAAkBiH,GA/GvD,IAAAC,EAAAC,EAAAC,EAAA9F,EAAA+F,EAAA7M,EAAA,OAAAiB,EAAAC,EAAAG,KAAA,SAAAyL,GAAA,cAAAA,EAAAvL,KAAAuL,EAAAtL,MAAA,cAAAsL,EAAAtL,KAAA,EAkHgCC,EAAQC,MAAMC,OAAO6D,EAAI8C,eAlHzD,UAkHcoE,EAlHdI,EAAAhL,KAqHmC,KAFrB6K,EAAc3N,EAAc0N,EAAWD,EAAMxN,QAEnCmB,OArHxB,CAAA0M,EAAAtL,KAAA,cAsHYjC,QAAQC,MAAR,0BAAAC,OAAwCgN,EAAMxN,MAA9C,6BACMoB,MAAM,kCAvHxB,YA0HYsM,EAAYvM,OAAS,GA1HjC,CAAA0M,EAAAtL,KAAA,eA2HYjC,QAAQC,MAAR,0BAAAC,OAAwCgN,EAAMxN,MAA9C,iCACMoB,MAAM,4CA5HxB,QA+HcuM,EAAgBD,EAAY,GAC5B7F,EAAS8F,EAAc7F,WAAWC,aAAa,UAC/C6F,EAAaD,EAAc7F,WAAWC,aAAa,WACrDhH,EAAQ,GACR8G,EACA9G,EAAQ8G,EAAOlG,MACTiM,EACN7M,EAAQ6M,EAAWjM,OAEnBZ,EAAK,WAAAP,OAAciJ,EAAMqE,kBACzBrE,EAAMqE,kBAAoB,EAI1BH,EAAcI,aAAa,UAAWhN,IAI1CwF,EAAI+C,iBAAmBvI,EACvBwF,EAAIkC,WAAWsF,aAAa,SAA5B,GAAAvN,OAAyC+F,EAAI8C,cAA7C,KAAA7I,OAA8DO,IAlJtE,yBAAA8M,EAAA/K,SAAAyK,MAAA,gBAAAxK,EAAAqC,GAAA,OAAAkI,EAAAtK,MAAA/E,KAAAgF,YAAA,KAAAvB,IAAA,sBAAAC,MAAA,eAAAqM,EAAAjQ,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAA+L,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvM,EAAAC,EAAAG,KAAA,SAAAoM,GAAA,cAAAA,EAAAlM,KAAAkM,EAAAjM,MAAA,OAAA2L,GAAA,EAAAC,GAAA,EAAAC,OAAAnH,EAAAuH,EAAAlM,KAAA,EAAA+L,EAAArM,EAAAC,EAAAC,KAAA,SAAAmM,IAAA,IAAA5J,EAAA+H,EAAAiC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtI,EAAAuI,EAAAnJ,EAAAqH,EAAA,OAAAhL,EAAAC,EAAAG,KAAA,SAAA2M,GAAA,cAAAA,EAAAzM,KAAAyM,EAAAxM,MAAA,OAsJgBkC,EAtJhB8J,EAAA5M,MAuJkB6K,EAAkB,IAAIf,IAvJxCgD,GAAA,EAAAC,GAAA,EAAAC,OAAA1H,EAAA8H,EAAAzM,KAAA,EAAAsM,EAyJ2BnK,EAAImB,SAzJ/BwB,OAAAC,YAAA,UAAAoH,GAAAI,EAAAD,EAAArM,QAAA+E,KAAA,CAAAyH,EAAAxM,KAAA,gBAyJoBgE,EAzJpBsI,EAAAlN,MAAAoN,EAAAxM,KAAA,GA0JuCC,EAAQC,MAAMC,OAAO6D,EAAI8C,eA1JhE,QA0JsBnG,EA1JtB6L,EAAAlM,KA2JgB,IACU8C,EAAU7E,EAAmBoC,EAAUqD,EAAI+C,kBACjD/C,EAAIM,aAAelB,EACrB,MAAMtF,GACJC,QAAQC,MAAR,WAAAC,OAAyB+F,EAAIkC,WAAWuG,UAAxC,gBACAxC,EAAgBW,IAAI5G,GAhKxC,QAAAkI,GAAA,EAAAM,EAAAxM,KAAA,gBAAAwM,EAAAxM,KAAA,iBAAAwM,EAAAzM,KAAA,GAAAyM,EAAAxD,GAAAwD,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAAxD,GAAA,QAAAwD,EAAAzM,KAAA,GAAAyM,EAAAzM,KAAA,GAAAmM,GAAA,MAAAG,EAAAlH,QAAAkH,EAAAlH,SAAA,WAAAqH,EAAAzM,KAAA,IAAAoM,EAAA,CAAAK,EAAAxM,KAAA,eAAAoM,EAAA,eAAAI,EAAAvD,OAAA,mBAAAuD,EAAAvD,OAAA,YAoKkBwB,EAAgBvI,EAAImB,SAASU,OAAO,SAACC,GAAD,OAAUiG,EAAgBjO,IAAIgI,KACxE9B,EAAImB,SAAWoH,EArK3B,yBAAA+B,EAAAjM,SAAAuL,EAAA,mCAAAC,EAsJuBrQ,KAAKyG,KAtJ5B0C,OAAAC,YAAA,UAAA6G,GAAAK,EAAAD,EAAA/L,QAAA+E,KAAA,CAAAkH,EAAAjM,KAAA,gBAAAiM,EAAAnB,cAAAgB,IAAA,eAAAH,GAAA,EAAAM,EAAAjM,KAAA,gBAAAiM,EAAAjM,KAAA,iBAAAiM,EAAAlM,KAAA,GAAAkM,EAAApB,GAAAoB,EAAA,SAAAL,GAAA,EAAAC,EAAAI,EAAApB,GAAA,QAAAoB,EAAAlM,KAAA,GAAAkM,EAAAlM,KAAA,GAAA4L,GAAA,MAAAI,EAAA5G,QAAA4G,EAAA5G,SAAA,WAAA8G,EAAAlM,KAAA,IAAA6L,EAAA,CAAAK,EAAAjM,KAAA,eAAA6L,EAAA,eAAAI,EAAAhD,OAAA,mBAAAgD,EAAAhD,OAAA,6BAAAgD,EAAA1L,SAAAmL,EAAAhQ,KAAA,wDAAA+P,EAAAhL,MAAA/E,KAAAgF,YAAA,KAAAvB,IAAA,kBAAAC,MAAA,WAyK8B,IAAAsN,GAAA,EAAAC,GAAA,EAAAC,OAAAlI,EAAA,IAGtB,QAAAmI,EAAAC,EAAepR,KAAKyG,KAApB0C,OAAAC,cAAA4H,GAAAG,EAAAC,EAAA9M,QAAA+E,MAAA2H,GAAA,EAA0B,KAAlBxK,EAAkB2K,EAAAzN,MAChB2N,EAAa,IAAI7D,IADD8D,GAAA,EAAAC,GAAA,EAAAC,OAAAxI,EAAA,IAEtB,QAAAyI,EAAAC,EAAelL,EAAImB,SAAnBwB,OAAAC,cAAAkI,GAAAG,EAAAC,EAAApN,QAAA+E,MAAAiI,GAAA,EAA6B,KAArBhJ,EAAqBmJ,EAAA/N,MACzB,GAAK4E,EAAIM,aAAT,CAIA,IAAM+I,GAAcN,EAAW/Q,IAAIgI,EAAI8C,eACvC9C,EAAIM,aAAckH,aAAa,UAAWtJ,EAAIG,IAC9C2B,EAAIM,aAAckH,aAAa,eAAgB6B,EAAa,OAAS,SAErEN,EAAWnC,IAAI5G,EAAI8C,oBAPf/I,QAAQC,MAAM,6FAJA,MAAAF,GAAAmP,GAAA,EAAAC,EAAApP,EAAA,YAAAkP,GAAA,MAAAI,EAAAjI,QAAAiI,EAAAjI,SAAA,WAAA8H,EAAA,MAAAC,KAHJ,MAAApP,GAAA6O,GAAA,EAAAC,EAAA9O,EAAA,YAAA4O,GAAA,MAAAI,EAAA3H,QAAA2H,EAAA3H,SAAA,WAAAwH,EAAA,MAAAC,MAzK9B,CAAAzN,IAAA,oBAAAC,MAAA,WA4LgC,IAAAkO,GAAA,EAAAC,GAAA,EAAAC,OAAA9I,EAAA,IAExB,QAAA+I,EAAAC,EAAiBhS,KAAKyG,KAAtB0C,OAAAC,cAAAwI,GAAAG,EAAAC,EAAA1N,QAAA+E,MAAAuI,GAAA,EAA4B,CAAAG,EAAArO,MACpBuO,eAHgB,MAAA7P,GAAAyP,GAAA,EAAAC,EAAA1P,EAAA,YAAAwP,GAAA,MAAAI,EAAAvI,QAAAuI,EAAAvI,SAAA,WAAAoI,EAAA,MAAAC,MA5LhC,CAAArO,IAAA,OAAAhD,IAAA,WA8DQ,IAAKT,KAAKyL,MACN,MAAM,IAAItI,MAAJ,6BAEV,OAAOnD,KAAKyL,UAjEpBD,EAAA,GAAaA,EAMMqE,iBAAmB,EC3K/B,IAAMqC,EAAb,WAOI,SAAAA,EAAYrM,EAAiBiB,GAAgBhH,OAAAC,EAAA,EAAAD,CAAAE,KAAAkS,GAAAlS,KAN7B6K,iBAM4B,EAAA7K,KAL5B8F,iBAK4B,EAAA9F,KAJpCmS,WAIoC,EAAAnS,KAHpC2L,cAAe,EAGqB3L,KAFpC4L,4BAEoC,EACxC5L,KAAK6K,YAAchF,EACnB7F,KAAK8F,YAAcgB,EAT3B,OAAAhH,OAAA0D,EAAA,EAAA1D,CAAAoS,EAAA,EAAAzO,IAAA,aAAAC,MAAA,WAYuC,IAAArD,EAAAL,KAG/B,OAAGA,KAAK4L,uBACG5L,KAAK4L,wBAGhB5L,KAAK4L,uBAAyB5L,KAAK8L,kBACnC9L,KAAK4L,uBAAuB/K,KAAK,WAC7BR,EAAKuL,4BAAyB5C,IAE3BhJ,KAAK4L,0BAvBpB,CAAAnI,IAAA,kBAAAC,MAAA,eAAAqI,EAAAjM,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WA2BWtE,KAAK2L,aA3BhB,CAAAvH,EAAAE,KAAA,eAAAF,EAAAO,OAAA,wBAAAP,EAAAE,KAAA,EA+B2BtE,KAAKoS,UA/BhC,cA+BQpS,KAAKmS,MA/Bb/N,EAAAQ,KAAAR,EAAAE,KAAA,EAiCctE,KAAKiK,gBAjCnB,OAmCQjK,KAAK2L,cAAe,EAnC5B,wBAAAvH,EAAAS,SAAAX,EAAAlE,SAAA,yBAAA+L,EAAAhH,MAAA/E,KAAAgF,YAAA,KAAAvB,IAAA,UAAAC,MAAA,eAAA2O,EAAAvS,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAA4C,IAAA,IAAAzG,EAAA6E,EAAA,OAAAlB,EAAAC,EAAAG,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAuCclE,EAvCd,mGAAAmC,OAuCuHvC,KAAK6K,YAvC5H,wBAAA9D,EAAAzC,KAAA,EAyC+BC,EAAQ+N,OAAOF,QAAQhS,GAzCtD,cAyCc6E,EAzCd8B,EAAAnC,KAAAmC,EAAApC,OAAA,SA2CeM,GA3Cf,wBAAA8B,EAAAlC,SAAAgC,EAAA7G,SAAA,yBAAAqS,EAAAtN,MAAA/E,KAAAgF,YAAA,KAAAvB,IAAA,gBAAAC,MAAA,eAAA6O,EAAAzS,OAAAgE,EAAA,EAAAhE,CAAAiE,EAAAC,EAAAC,KAAA,SAAAsI,IAAA,IAAA3I,EAAA7C,EAAAmJ,EAAAlK,KAAA,OAAA+D,EAAAC,EAAAG,KAAA,SAAAsI,GAAA,cAAAA,EAAApI,KAAAoI,EAAAnI,MAAA,cA+CcV,EAAW5D,KAAK8F,YAAc,GAAnB,IAAAvD,OAA4BvC,KAAK8F,aAAjC,GAAAvD,OAAoDvC,KAAK8F,aA/ClF2G,EAAAnI,KAAA,EAgD0BC,EAAQC,MAAMC,OAAd,qFAAAlC,OAA0GvC,KAAK6K,YAA/G,MAAAtI,OAA+HqB,EAA/H,SAhD1B,OAgDc7C,EAhDd0L,EAAA7H,KAkDQ5E,KAAKmS,MAAL,KAAoBzM,IAAI,SAACO,GAAD,OAAwBiE,EAAKK,aAAatE,EAAYlF,KAlDtF,wBAAA0L,EAAA5H,SAAA0H,EAAAvM,SAAA,yBAAAuS,EAAAxN,MAAA/E,KAAAgF,YAAA,KAAAvB,IAAA,eAAAC,MAAA,SAqDyBuC,EAAoBlF,GACrC,IACMgB,EADSkE,EAAU,OAAV,SAAiCoC,OAAO,SAACmK,GAAD,MAAqB,kBAAdA,EAAC,OAA8B,GAA9E,cACO,MAChBC,EAAS3Q,EAAcf,EAAKgB,GAClC,GAAI0Q,EAAOvP,OAAS,EAAG,CACnB,IAAMoH,EAAmBmI,EAAO,GAC1BC,EAAMpI,EAAG1C,aAAa,eACxB8K,EACApI,EAAGwF,aAAa,cAAhB,GAAAvN,OAAkCmQ,EAAlC,KAAAnQ,OAAyC0D,EAAU,KAEnDqE,EAAGwF,aAAa,cAAe7J,EAAU,IAGjD,OAAOlE,IAlEf,CAAA0B,IAAA,gBAAAC,MAAA,SAqEyBiD,GAEjB,OADmB3G,KAAKmS,MAAL,KAAoB9J,OAAO,SAACrE,GAAD,OAAeA,EAAC,KAAW2C,IAAI,OAtErFuL,EAAA,GCUOS,aAQF,SAAAA,IAAuB7S,OAAAC,EAAA,EAAAD,CAAAE,KAAA2S,GAAA3S,KAPPwE,WAOM,EAAAxE,KANNsS,YAMM,EAAAtS,KALNyH,cAKM,EAAAzH,KAJN4S,YAIM,EAAA5S,KAHN6S,iBAGM,EAClB7S,KAAKwE,MAAQ,IAAI3E,EACjBG,KAAKsS,OAAS,IAAI9Q,EAClBxB,KAAKyH,SAAW,CACb,IAAIjC,EAAU,KAAM,KAAM,CAAC,EAAG,EAAG,EAAG,KACpC,IAAIN,EAAgB,OAAQ,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAChE,IAAIA,EAAgB,SAAU,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACpE,IAAIA,EAAgB,OAAQ,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAChE,IAAIA,EAAgB,OAAQ,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAGnElF,KAAK4S,OAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIlN,IAAI,SAACoN,GAAD,OAAO,IAAItH,EAAMsH,KAEnE9S,KAAK6S,YAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAInN,IAAI,SAACoN,GAAD,OAAO,IAAIZ,EAAW,OAAQY,KAAIvQ,OACtF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAImD,IAAI,SAACoN,GAAD,OAAO,IAAIZ,EAAW,OAAQY,KAClE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIpN,IAAI,SAACoN,GAAD,OAAO,IAAIZ,EAAW,OAAQY,KAClE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIpN,IAAI,SAACoN,GAAD,OAAO,IAAIZ,EAAW,SAAUY,6DAIzDzP,GACd,IAAM+E,EAAKpI,KAAKyH,SAASf,KAAK,SAAC0B,GAAD,OAAQA,EAAG/E,OAASA,IAElD,IAAK+E,EACD,MAAM,IAAIjF,MAAJ,sBAAAZ,OAAgCc,IAG1C,OAAO+E,mCAGKtB,GACZ,IAAMd,EAAQhG,KAAK4S,OAAOlM,KAAK,SAACqM,GAAD,OAAQA,EAAGjN,cAAgBgB,IAE1D,IAAId,EACA,MAAM,IAAI7C,MAAJ,8BAAAZ,OAAwCuE,IAElD,OAAOd,wCAGUH,EAAiBiB,GACnC,IAAMb,EAAajG,KAAK6S,YAAYnM,KAAK,SAACqM,GAAD,OAAQA,EAAGlI,cAAgBhF,GAAWkN,EAAGjN,cAAgBgB,IAElG,IAAIb,EACA,MAAM,IAAI9C,MAAJ,sCAAAZ,OAAgDsD,IAE1D,OAAOI,WArDR0M,EAMYK,SAAW,IAAIL,EAmDlC,IACepO,EADCoO,EAAaK,SCnDdC,mLATP,IAAIC,EAAO,UAAA3Q,OAAavC,KAAKmT,MAAMtN,QAAQxC,MAK3C,OAJIrD,KAAKmT,MAAMC,QACXF,GAAW,cAGRG,EAAArP,EAAA0E,cAAA,QAAM4K,UAAWJ,WAPPK,IAAMC,WCkEhBC,6MAjDXC,MAAQ,CACJC,kBAAmB,GACnBC,qBAAiB5K,KAGrB6K,kBAAoB,WAChB,IAAMpM,EAAWlD,EAAQkD,SAAS/B,IAAI,SAAC0C,EAAI0L,GAAL,MAAgB,CAAErQ,IAAKqQ,EAAOpQ,MAAO0E,EAAG/E,KAAM0Q,MAAOV,EAAArP,EAAA0E,cAAA,aAAO2K,EAAArP,EAAA0E,cAACsL,EAAD,CAAYnO,QAAUuC,IAAOA,EAAG9E,SAGlIjD,EAAK4T,SAAS,CAAEN,kBAAmBlM,EAAUmM,gBAAiBnM,EAAS,KACvEpH,EAAK8S,MAAMe,kBAAkB7T,EAAK8S,MAAM1L,SAAS,OAYrD0M,eAAiB,SAACC,GACd,IAAMvO,EAAUtB,EAAQkD,SAASf,KAAK,SAAC0B,GAAD,OAAQA,EAAG/E,OAAS+Q,EAAe1Q,QACrEmC,GAKJxF,EAAK4T,SAAU,CAAEL,gBAAiBQ,IAClC/T,EAAK8S,MAAMe,kBAAkBrO,IALzBxD,QAAQgS,KAAR,uCAAA9R,OAAoD6R,EAAe1Q,2FAZxD4Q,GAAiC,IAAApK,EAAAlK,KAChD,GAAGsU,EAAUzO,UAAY7F,KAAKmT,MAAMtN,QAAS,CACzC,IAAM0O,EAASvU,KAAK0T,MAAMC,kBAAkBjN,KAAK,SAAC0B,GAAD,OAAQA,EAAG1E,QAAUwG,EAAKiJ,MAAMtN,QAAQxC,OACtFkR,GACCvU,KAAKiU,SAAU,CAAEL,gBAAiBW,sCAkB1C,OACAlB,EAAArP,EAAA0E,cAAA,WACI2K,EAAArP,EAAA0E,cAAA,SAAO4K,UAAU,eAAjB,oBACAD,EAAArP,EAAA0E,cAAC8L,EAAA,EAAD,CACIlB,UAAU,eACVmB,SAAUzU,KAAKmU,eACfO,QAAS1U,KAAK0T,MAAMC,kBACpBjQ,MAAO1D,KAAK0T,MAAME,0BA5CJL,IAAMC,4BCWrBmB,mLAnBT,IAAIC,EAAM,GACNC,EAAa,GAOjB,OALG7U,KAAKmT,MAAM2B,UACXF,EAAG,IAAArS,OAAOvC,KAAKmT,MAAM2B,QAAlB,KACHD,EAAU,KAAAtS,OAAQvC,KAAKmT,MAAM2B,QAAnB,MAIVzB,EAAArP,EAAA0E,cAAA,OAAK4K,UAAS,mBAAA/Q,OAAqBvC,KAAKmT,MAAMyB,KAAOG,eAAc/U,KAAKmT,MAAMyB,KAE1EI,IAAgBJ,GAChB5U,KAAKmT,MAAMxK,SACXqM,IAAgBH,WAhBCtB,IAAMC,WCarByB,mLAbP,IAAI/B,EAAU,YAKd,OAJKlT,KAAKmT,MAAM+B,WACZhC,GAAW,YAIXG,EAAArP,EAAA0E,cAAA,QAAM4K,UAAWJ,GACXlT,KAAKmT,MAAM/R,aAVFmS,IAAMC,WCgDlB2B,6MA1CZC,QAAU,WACH/U,EAAK8S,MAAMkC,gBAAkBhV,EAAK8S,MAAMmC,YACzCjV,EAAK8S,MAAMmC,WAAWjV,EAAK8S,MAAM3M,8EAKpC,IAAIxG,KAAKmT,MAAMkC,eACZ,OAAOhC,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,sBAAuBtT,KAAKmT,MAAMxK,UAG3D,IAAM4M,EAAYvV,KAAKmT,MAAM3M,IAAIb,GAAK,EAEhCuN,EAAO,6BAAA3Q,OADEgT,EAAY,EAAK,EAAKA,EAAY,GAAM,EAAI,GAIrDjK,EAAStL,KAAKmT,MAAM3M,IAAIgP,eAAexV,KAAKmT,MAAMtN,SACpD4P,EAAqB,GACrBhS,EAAM,EAZJoF,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAaN,QAAAC,EAAAC,EAAmBoC,EAAnBnC,OAAAC,cAAAP,GAAAI,EAAAC,EAAA5E,QAAA+E,MAAAR,GAAA,EAA2B,KAClB6M,EADkBzM,EAAAvF,MACA+D,SAAS/B,IAAI,SAAC0C,GAAD,OAAQiL,EAAArP,EAAA0E,cAACsL,EAAD,CAAYZ,OAAO,EAAMvN,QAAUuC,EAAK3E,IAAK2E,EAAG/E,UAC7FoS,EAAcA,EAAYlT,OAAOmT,IACrB9S,KAAKyQ,EAAArP,EAAA0E,cAAA,QAAM4K,UAAU,gBAAgB7P,IAAKA,KACtDA,KAjBG,MAAArB,GAAA0G,GAAA,EAAAC,EAAA3G,EAAA,YAAAyG,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAoBN,IAAI4M,EAAa,mBAKjB,OAJI3V,KAAKmT,MAAM+B,WACZS,GAAc,YAIdtC,EAAArP,EAAA0E,cAAA,OAAK4K,UAAWJ,EAASkC,QAASpV,KAAKoV,QAASQ,WAAU5V,KAAKmT,MAAM3M,IAAIG,IACpE3G,KAAKmT,MAAMxB,WAAa0B,EAAArP,EAAA0E,cAAA,OAAK4K,UAAWqC,GACrCF,GACI,GACPzV,KAAKmT,MAAMxK,iBArCG4K,IAAMC,4BCyBnBqC,6MA7BZT,QAAU,SAACU,GACJzV,EAAK8S,MAAM4C,iBAAmB1V,EAAK8S,MAAM6C,oBAC1C3V,EAAK8S,MAAM6C,kBAAkB3V,EAAK8S,MAAMN,aACxCiD,EAAEG,4FAKL,OACG5C,EAAArP,EAAA0E,cAAA2K,EAAArP,EAAAkS,SAAA,KACG7C,EAAArP,EAAA0E,cAAA,OAAK0M,QAASpV,KAAKoV,QAASe,MAAO,CAChCC,SAAU,WACVC,MAAO,MACPC,OAAQ,UACRC,KAAM,OACNC,UAAW,MACXC,QAAS,OACTC,WAAY,SACZC,aAAc,mBAEdtD,EAAArP,EAAA0E,cAAA,QAAMyN,MAAO,CAACS,aAAc,OAAQC,UAAW,WAAY7W,KAAKmT,MAAMN,YAAY3P,QAClFmQ,EAAArP,EAAA0E,cAAA,OAAKoO,IAAKC,IAAUZ,MAAO,CAACE,MAAO,WAEpCrW,KAAKmT,MAAMxK,iBAxBU4K,IAAMC,WCC5BwD,EAAb,WAGI,SAAAA,EAAoB3B,EAAiCU,EAAkCb,EAA2BrP,EAA2BiB,GAAgBhH,OAAAC,EAAA,EAAAD,CAAAE,KAAAgX,GAAAhX,KAAzIqV,iBAAwIrV,KAAvG+V,kBAAuG/V,KAArEkV,WAAqElV,KAA1C6F,UAA0C7F,KAAf8G,QAHjJ,OAAAhH,OAAA0D,EAAA,EAAA1D,CAAAkX,EAAA,EAAAvT,IAAA,aAAAC,MAAA,SAMuBuT,GACf,MAAe,MAAXA,EACO,IACW,SAAXA,EACA,KACW,OAAXA,EACA,SADJ,IAXf,CAAAxT,IAAA,kBAAAC,MAAA,SAkB4BhB,GAIpB,IAHA,IAAMwU,EAAkBxU,EAAamH,WAC/BsN,EAAkB,GAEfrE,EAAI,EAAGA,EAAIoE,EAAehU,OAAQ4P,IAAK,CAC5C,IAAIxP,EAAO4T,EAAepE,GAAGsE,SAChB,WAAT9T,IACAA,EAAO,MAEX6T,EAAW7T,GAAQ4T,EAAepE,GAAGuE,UAGzC,OAAOF,IA9Bf,CAAA1T,IAAA,oBAAAC,MAAA,SAiC6BhB,EAAY4S,EAAuCU,GAAqE,IAAA3V,EAAAL,KACvIsX,EAA6B,GAEnC,GAAI5U,EAAK6U,gBACL,IAAK,IAAIzE,EAAI,EAAGA,EAAIpQ,EAAK8U,WAAWtU,OAAQ4P,IAAK,CAC7C,IAAM2E,EAAY/U,EAAK8U,WAAW1E,GAC9B4E,OAA0B1O,EAC9B,GAA2B,IAAvByO,EAAUE,SACVD,EAAe1X,KAAK4X,kBAAkBH,EAAWnC,EAAYU,QAC1D,GAA2B,IAAvByB,EAAUE,SAAgB,CACjC,IAAIvW,EAAOqW,EAAUI,aAAe,IACpCzW,EAAOA,EAAK0W,UAERJ,EAAenE,IAAM7K,cAAcuM,EAAc,CAC7C7T,KAAMqW,EAAUI,aAAe,GAC/B3C,SAAUlV,KAAKkV,SACfG,eAAgBrV,KAAKqV,eACrBU,gBAAiB/V,KAAK+V,gBACtBtS,IAAKuT,EAAalD,gBAI1BzR,QAAQgS,KAAK,qCAAsCoD,GAGnDC,GACAJ,EAAc1U,KAAK8U,GAM/B,IAAMK,EAAW/X,KAAKgY,gBAAgBtV,GAGlCyQ,EAAa,CACbyB,IAAKlS,EAAK0U,SACV3T,IAAKuT,EAAalD,QAClBgB,QAAS9U,KAAKiY,WAAWvV,EAAK0U,UAC9BlC,SAAUlV,KAAKkV,SACfG,eAAgBrV,KAAKqV,eACrBU,gBAAiB/V,KAAK+V,gBACtBgC,SAAUA,GAGVG,EAA0B3E,IAAM7K,cAAciM,EAAiBxB,EAAOmE,GAE1E,GAAItX,KAAK8G,OAAS9G,KAAKqV,gBAAkB0C,EAAS,WAAY,CAC1D,IAAMvR,EAAMxG,KAAK8G,MAAMqR,OAAOJ,EAAS,YACjCpG,EAA0C,SAA7BoG,EAAS,gBAG5BG,EAAe3E,IAAM7K,cAAcyM,EAAe,CAC9C1R,IAAKuT,EAAalD,QAClBuB,eAAgBrV,KAAKqV,eACrBH,SAAUlV,KAAKkV,SACfrP,QAAS7F,KAAK6F,QACdyP,aACA9O,MAAKmL,cACT,CAACuG,IAGL,GAAIlY,KAAK8G,OAAS9G,KAAK+V,iBAAmBgC,EAAQ,YAAiB,CAE/D,IAAMlF,EAA6BkF,EAAQ,YAAgB5M,MAAM,KAAKzF,IAAI,SAAC+M,GACvE,OAAOpS,EAAKyG,MAAOb,WAAYiB,cAAcuL,KAEjDyF,EAAe3E,IAAM7K,cAAcmN,EAAsB,CACrDpS,IAAKuT,EAAalD,QAClBiC,gBAAiB/V,KAAK+V,gBACtBC,oBACAnD,eACJ,CAACqF,IAGL,OAAOA,MA5GflB,EAAA,GAAaA,EACMlD,MAAQ,MC6CZsE,6MAnCX1E,MAAQ,CACJ2E,cAAUrP,KAkBdsP,cAAgB,WACZ,IAAMC,EAAY,IAAIvB,EAAa3W,EAAK8S,MAAMkC,eAAgBhV,EAAK8S,MAAM4C,gBAAiB1V,EAAK8S,MAAM+B,SAAU7U,EAAK8S,MAAMtN,QAASxF,EAAK8S,MAAMrM,OACxIuR,EAAWhY,EAAK8S,MAAMrM,MAAMZ,UAAUR,IAAI,SAAC8S,GAAD,OAAUD,EAAUX,kBAAkBY,EAAMnY,EAAK8S,MAAMmC,WAAYjV,EAAK8S,MAAM6C,qBAE9H3V,EAAK4T,SAAU,CAAEoE,iGAlBjBrY,KAAKsY,2DAGUhE,GACXA,GACAtU,KAAKmT,MAAMrM,QAAUwN,EAAUxN,OAC/B9G,KAAKmT,MAAMtN,UAAYyO,EAAUzO,SACjC7F,KAAKmT,MAAM+B,WAAaZ,EAAUY,UAClClV,KAAKmT,MAAMkC,iBAAmBf,EAAUe,gBACxCrV,KAAKmT,MAAM4C,kBAAoBzB,EAAUyB,iBACzC/V,KAAKsY,iDAYT,OACIjF,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,gBAAgB6C,MAAO,CAACC,SAAU,aAC3CpW,KAAK0T,MAAM2E,iBA9BF9E,IAAMC,WCqGlBiF,6MApGX/E,MAAQ,CACJgF,WAAYrY,EAAK8S,MAAMrM,MACvBsN,oBAAgBpL,EAChB2P,gBAAiB,GACjBC,aAAa,EACbC,aAAa,KAuCjBC,eAAiB,SAAC1E,GACd,IAAMtN,EAAQkD,SAASoK,EAAe1Q,OAChCoQ,EAAQzT,EAAKqT,MAAMiF,gBAAgBI,UAAU,SAACC,GAAD,OAASA,EAAItV,QAAUoD,EAAMmS,aAChF5Y,EAAK4T,SAAS,CAAEyE,WAAY5E,EAAOM,mBAEnC/T,EAAK8S,MAAM+F,gBAAgBpS,MAG/BqS,YAAc,SAACC,GACX/Y,EAAK4T,SAAU,CAAC2E,aAAa,EAAOC,aAAa,IACjD,IACMQ,EADQhZ,EAAKqT,MAAMgF,WAAa,EACbU,EAMzB,GALiB,IAAbC,EACAhZ,EAAK4T,SAAU,CAAC2E,aAAa,IACtBS,IAAahZ,EAAKqT,MAAMiF,gBAAgBzV,QAC/C7C,EAAK4T,SAAU,CAAC4E,aAAa,KAEqB,IAAlDxY,EAAK8S,MAAMtN,QAAStC,OAAOgI,QAAQ8N,GAAvC,CAGA,IAAMC,EAAYjZ,EAAKqT,MAAMiF,gBAAgBjS,KAAK,SAACsS,GAAD,OAASA,EAAItV,QAAU2V,EAASJ,aAC7EK,GACDjX,QAAQC,MAAM,4BAElBjC,EAAK4T,SAAS,CAAEyE,WAAYW,EAAW,EAAGjF,eAAgBkF,IAC1DjZ,EAAK8S,MAAM+F,gBAAiBG,uFA7Db/E,GAAwB,IAAApK,EAAAlK,KACvC,GAAIA,KAAKmT,MAAMtN,UAAYyO,EAAUzO,QAAS,CAC1C,IAAItC,EAAS,GACb,GAAIvD,KAAKmT,MAAMtN,QAAS,CACpBtC,EAASvD,KAAKmT,MAAMtN,QAAQtC,OAAOmC,IAAI,SAAC6T,GAAD,MAAQ,CAAE7V,MAAO6V,EAAEN,WAAYlF,MAAOwF,EAAEN,cAC/E,IAAIO,EAAiB,EACjBlF,IAEwB,KADxBkF,EAAiBxZ,KAAK0T,MAAMiF,gBAAgBI,UAAU,SAACC,GAAD,OAASA,EAAItV,QAAU4Q,EAAUxN,MAAMmS,gBAEzFO,EAAiB,GAIzB,IAAMC,EAAazZ,KAAKmT,MAAMtN,QAAQtC,OAAOiW,GAC7CxZ,KAAKiU,SAAU,CAAE0E,gBAAiBpV,EAAQmV,WAAYc,EAAgBpF,eAAgB7Q,EAAOiW,KAC7FxZ,KAAKmT,MAAM+F,gBAAgBO,IAInC,GAAIzZ,KAAKmT,MAAMrM,QAAUwN,EAAUxN,MAAO,CACtC,IAAMgN,EAAQ9T,KAAK0T,MAAMiF,gBAAgBI,UAAU,SAACC,GAAD,OAASA,EAAItV,QAAUwG,EAAKiJ,MAAMrM,MAAMmS,cAC5E,IAAXnF,EACA9T,KAAKiU,SAAS,CACVyE,WAAY5E,EACZM,eAAgBpU,KAAK0T,MAAMiF,gBAAgB7E,GAC3C8E,YAAqB,IAAR9E,EACb+E,YAAa/E,IAAQ9T,KAAK0T,MAAMiF,gBAAgBzV,OAAS,KAG7Db,QAAQgS,KAAR,yCAAA9R,OAAsDvC,KAAKmT,MAAMrM,QACjE9G,KAAKiU,SAAS,CAAEyE,WAAY,EAAGtE,eAAgBpU,KAAK0T,MAAMiF,gBAAgB,GAAIC,aAAa,EAAMC,YAAmD,IAAtC7Y,KAAK0T,MAAMiF,gBAAgBzV,4CAkC5I,IAAAmH,EAAArK,KACL,OACIqT,EAAArP,EAAA0E,cAAA,WACK1I,KAAKmT,MAAMtN,QACZwN,EAAArP,EAAA0E,cAAA,WACI2K,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,WACXD,EAAArP,EAAA0E,cAAA,SAAO4K,UAAU,eAAjB,oBACAD,EAAArP,EAAA0E,cAAC8L,EAAA,EAAD,CACIlB,UAAU,eACVmB,SAAUzU,KAAK8Y,eACfpE,QAAS1U,KAAK0T,MAAMiF,gBACpBjV,MAAO1D,KAAK0T,MAAMU,kBAI1Bf,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,0BACXD,EAAArP,EAAA0E,cAAA,UAAQ0M,QAAS,kBAAM/K,EAAK8O,aAAa,IAAI7F,UAAU,OACnDoG,SAAU1Z,KAAK0T,MAAMkF,cAAsBvF,EAAArP,EAAA0E,cAAA,iCAC/C2K,EAAArP,EAAA0E,cAAA,SAAO4K,UAAU,iBAAjB,gBAAqDD,EAAArP,EAAA0E,cAAA,UAAQ4K,UAAU,OACnE8B,QAAS,kBAAM/K,EAAK8O,YAAY,IAAIO,SAAU1Z,KAAK0T,MAAMmF,gBAGnE,WAhGGtF,IAAMC,6CCoCZmG,mLAzCP,IAEIC,EAFEnS,EAAWlD,EAAQkD,SAAS/B,IAAI,SAACoQ,EAAGhC,GAAJ,OAClCT,EAAArP,EAAA0E,cAAA,SAAOjF,IAAKqQ,EAAOR,UAAU,iBAAgBD,EAAArP,EAAA0E,cAACsL,EAAD,CAAYnO,QAASiQ,EAAGrS,IAAKqS,EAAEzS,OAAQyS,EAAExS,QAW1F,OATItD,KAAKmT,MAAMtN,SACsB,OAA7B7F,KAAKmT,MAAMtN,QAASxC,OACpBuW,EAAMvG,EAAArP,EAAA0E,cAAA,OAAK/B,GAAG,OACV0M,EAAArP,EAAA0E,cAAA,KAAGmR,KAAK,2EAA0ExG,EAAArP,EAAA0E,cAAA,OAAKoO,IAAKgD,OAC5FzG,EAAArP,EAAA0E,cAAA,2EAAkE2K,EAAArP,EAAA0E,cAAA,KAAGmR,KAAK,2EAAR,2BAClExG,EAAArP,EAAA0E,cAAA,aAKR2K,EAAArP,EAAA0E,cAAA,WACI2K,EAAArP,EAAA0E,cAAA,UAAQ4K,UAAU,gBACdD,EAAArP,EAAA0E,cAAA,OAAK/B,GAAG,2BACHc,GAEL4L,EAAArP,EAAA0E,cAAA,OAAK/B,GAAG,gBAAiB2M,UAAU,gBAC9BtT,KAAKmT,MAAMtN,QACZwN,EAAArP,EAAA0E,cAAA,UAAK1I,KAAKmT,MAAMtN,QAAQvC,KAAxB,YACE+P,EAAArP,EAAA0E,cAAA,sBAEN2K,EAAArP,EAAA0E,cAAA,OAAK/B,GAAG,2BACJ0M,EAAArP,EAAA0E,cAAA,mCACA2K,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,aAAawD,IAAK1Q,IAAY2T,IAAI,uBAIzD1G,EAAArP,EAAA0E,cAAA,MAAI4K,UAAU,SACdD,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,gBACXD,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,gBAAf,cACAD,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,gBAAf,QACAD,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,gBAAf,eAEHsG,UAtCIrG,IAAMC,WC+EZwG,6MAtEXtG,MAAQ,CACJ2B,gBAAgB,EAChBU,iBAAiB,EACjBb,UAAU,KAcd+E,mBAAqB,WACjB,IAAMC,GAAW7Z,EAAKqT,MAAM2B,eAC5BhV,EAAK4T,SAAU,CAAEoB,eAAgB6E,IACjC7Z,EAAK8S,MAAM8G,mBAAmBC,MAGlCC,oBAAsB,WAClB,IAAMD,GAAW7Z,EAAKqT,MAAMqC,gBAC5B1V,EAAK4T,SAAU,CAAE8B,gBAAiBmE,IAClC7Z,EAAK8S,MAAMgH,oBAAoBD,MAGnCE,cAAgB,WACZ,IAAMC,GAAeha,EAAKqT,MAAMwB,SAChC7U,EAAK4T,SAAU,CAAEiB,SAAUmF,IAC3Bha,EAAK8S,MAAMiH,cAAcC,sFA1BV/F,GACXtU,KAAKmT,MAAMkC,iBAAmBrV,KAAK0T,MAAM2B,gBACzCrV,KAAKiU,SAAU,CAAEoB,eAAgBrV,KAAKmT,MAAMkC,iBAG7CrV,KAAKmT,MAAM+B,WAAalV,KAAK0T,MAAMwB,UAClClV,KAAKiU,SAAU,CAAEiB,SAAUlV,KAAKmT,MAAM+B,4CAwB1C,OACA7B,EAAArP,EAAA0E,cAAA,WACI2K,EAAArP,EAAA0E,cAAA,SAAO4K,UAAU,6BAAjB,kBACAD,EAAArP,EAAA0E,cAAA,SAAO4K,UAAU,iBACbD,EAAArP,EAAA0E,cAAA,SACIpF,KAAK,YACLgX,KAAK,WACLC,QAASva,KAAK0T,MAAM2B,eACpBZ,SAAUzU,KAAKia,qBALvB,gBASA5G,EAAArP,EAAA0E,cAAA,SAAO4K,UAAU,iBACbD,EAAArP,EAAA0E,cAAA,SACIpF,KAAK,YACLgX,KAAK,WACLC,QAASva,KAAK0T,MAAMqC,gBACpBtB,SAAUzU,KAAKma,sBALvB,mBASA9G,EAAArP,EAAA0E,cAAA,SAAO4K,UAAU,iBACbD,EAAArP,EAAA0E,cAAA,SACIpF,KAAK,OACLgX,KAAK,WACLC,QAASva,KAAK0T,MAAMwB,SACpBT,SAAUzU,KAAKoa,gBALvB,oBA3DkB7G,IAAMC,WCkBrBgH,mLAxBP,IAIIC,EAHEC,EADe1a,KAAKmT,MAAM1K,MAAMhB,SAAS/B,IAAI,SAAC0C,GAAD,OAAQA,EAAG9E,OACnCqX,KAAK,MAC1BC,EAAO5a,KAAKmT,MAAM1K,MAAMhB,SAAS/B,IAAI,SAAC0C,GAAD,OAAQiL,EAAArP,EAAA0E,cAACsL,EAAD,CAAYZ,OAAO,EAAMvN,QAASuC,EAAI3E,IAAK2E,EAAG/E,SAG7FrD,KAAKmT,MAAM1K,MAAMf,QAEjB+S,EADkB,IAAIzD,GAAa,GAAO,GAAO,GAC7BY,kBAAkB5X,KAAKmT,MAAM1K,MAAMf,SAEvD+S,EAAWpH,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,eAAf,6BAGf,OACID,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,iBACXD,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,sBAAuBsH,GACtCvH,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,uBAAwBoH,GACvCrH,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,yBACTmH,WAnBclH,IAAMC,WCc3BqH,mLAZP,IAAMvP,EAAStL,KAAKmT,MAAM3M,IAAI8E,OAAO5F,IAAI,SAAC0E,GAAD,OACrCiJ,EAAArP,EAAA0E,cAACoS,EAAD,CAAuBrS,MAAO2B,EAAK3G,IAAK2G,EAAI5C,YAEhD,OACI6L,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,YACXD,EAAArP,EAAA0E,cAAA,MAAI4K,UAAU,wBACZhI,UARMiI,IAAMC,WCWfuH,mLAbP,IAAM9U,EAA4B,GAD7B4C,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEL,QAAAC,EAAAC,EAAuBlJ,KAAKmT,MAAMN,YAAlC1J,OAAAC,cAAAP,GAAAI,EAAAC,EAAA5E,QAAA+E,MAAAR,GAAA,EAA+C,KAApCmS,EAAoC/R,EAAAvF,MACvCuX,EAAWD,EAAQ,OAAR,SAA+B3S,OAAO,SAACmK,GAAD,MAAqB,sBAAdA,EAAC,OAAkC,GACjGvM,EAAWrD,KAAKyQ,EAAArP,EAAA0E,cAAA,OAAKjF,IAAKuX,EAAQ,GAAQ7E,MAAO,CAAC+E,WAAY,QAC1DzE,QAAS,QAAS0E,MAAO,gBAAiB3E,UAAW,QACrDnD,EAAArP,EAAA0E,cAAA,yBAAiBuS,EAASG,OAA1B,IAAkC/H,EAAArP,EAAA0E,cAAA,QAAMyN,MAAO,CAACgF,MAAO,UAAWE,WAAY,WAAYJ,EAASK,OAAnG,IAAkHL,EAASM,OAA3H,QACAlI,EAAArP,EAAA0E,cAAA,QAAMyN,MAAO,CAACU,UAAW,WAAYmE,EAAQ,KAAS,GAAjB,UAPtC,MAAA5Y,GAAA0G,GAAA,EAAAC,EAAA3G,EAAA,YAAAyG,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAUL,OAAOsK,EAAArP,EAAA0E,cAAA2K,EAAArP,EAAAkS,SAAA,KAAGjQ,UAXQsN,IAAMC,WCgJjBgI,8MA3HX9H,MAAQ,CACJ+H,SAAS,EACT3U,WAAOkC,EACPnD,aAASmD,EACTlD,YAAa,EAEbuP,gBAAgB,EAChBU,iBAAiB,EACjBb,UAAU,EACV1O,SAAKwC,EACL6J,iBAAa7J,KAIjB0S,iDAAa,SAAAxX,EAAO4B,GAAP,IAAAgB,EAAA,OAAA/C,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTjE,EAAK4T,SAAU,CAACwH,SAAS,EAAM3U,WAAOkC,IAEjC3I,EAAKqT,MAAM7N,QAHP,CAAAzB,EAAAE,KAAA,cAIC,IAAInB,MAAM,8CAJX,cAAAiB,EAAAE,KAAA,EAMWsB,EAAM+V,KAAKtb,EAAKqT,MAAM7N,QAASC,GAN1C,OAMHgB,EANG1C,EAAAQ,KAOTvE,EAAK4T,SAAU,CAACwH,SAAS,EAAO3U,QAAOhB,YAAagB,EAAMhB,YAAaU,SAAKwC,IAPnE,wBAAA5E,EAAAS,SAAAX,8DAUb0X,aAAe,SAAC/V,GACZxF,EAAK4T,SAAU,CAAEpO,UAASW,SAAKwC,OAEnC6S,YAAc,SAACC,GACXzb,EAAK4T,SAAU,CAAEoB,eAAgByG,OAErCC,aAAe,SAACD,GACZzb,EAAK4T,SAAU,CAAE8B,gBAAiB+F,OAEtCE,OAAS,SAACF,GACNzb,EAAK4T,SAAU,CAAEiB,SAAU4G,OAG/BxG,WAAa,SAAC9O,GACVnG,EAAK4T,SAAU,CAACzN,MAAKqM,iBAAa7J,OAGtCgN,kBAAoB,SAACnD,GACjBxS,EAAK4T,SAAU,CAACpB,cAAarM,SAAKwC,6EAelC,OACIqK,EAAArP,EAAA0E,cAAA,WAAS/B,GAAG,UACR0M,EAAArP,EAAA0E,cAAA,OAAK/B,GAAG,oBACJ0M,EAAArP,EAAA0E,cAACuT,EAAD,CACAxY,IAAK,EACLgE,SAAUlD,EAAQkD,SAClB5B,QAAS7F,KAAK0T,MAAM7N,QACpBqO,kBAAmBlU,KAAK4b,eAGxBvI,EAAArP,EAAA0E,cAACwT,EAAD,CACAzY,IAAK,EACLoC,QAAS7F,KAAK0T,MAAM7N,QACpBiB,MAAO9G,KAAK0T,MAAM5N,YAClBoT,gBAAiBlZ,KAAK0b,aAEtBrI,EAAArP,EAAA0E,cAACyT,EAAD,CACA9G,eAAgBrV,KAAK0T,MAAM2B,eAC3BU,gBAAiB/V,KAAK0T,MAAMqC,gBAC5Bb,SAAUlV,KAAK0T,MAAMwB,SACrB+E,mBAAoBja,KAAK6b,YACzB1B,oBAAqBna,KAAK+b,aAC1B3B,cAAepa,KAAKgc,UAIxB3I,EAAArP,EAAA0E,cAAC0T,EAAD,CACAvW,QAAS7F,KAAK0T,MAAM7N,UAEpBwN,EAAArP,EAAA0E,cAAA,OAAK/B,GAAG,mBAAmB2M,UAxCf,gBAyCRD,EAAArP,EAAA0E,cAAA,SAAO/B,GAAG,uBAER3G,KAAK0T,MAAM5M,OAAS9G,KAAK0T,MAAM7N,QACjCwN,EAAArP,EAAA0E,cAAC2T,EAAD,CACAvV,MAAO9G,KAAK0T,MAAM5M,MAClBjB,QAAS7F,KAAK0T,MAAM7N,QACpBwP,eAAgBrV,KAAK0T,MAAM2B,eAC3BU,gBAAiB/V,KAAK0T,MAAMqC,gBAC5Bb,SAAUlV,KAAK0T,MAAMwB,SACrBc,kBAAmBhW,KAAKgW,kBACxBV,WAAYtV,KAAKsV,aAAgBjC,EAAArP,EAAA0E,cAAA,YACjC2K,EAAArP,EAAA0E,cAAA,SAAO/B,GAAG,qBACJ3G,KAAK0T,MAAMlN,IAAM6M,EAAArP,EAAA0E,cAAC4T,EAAD,CAAW9V,IAAKxG,KAAK0T,MAAMlN,IAAMX,QAAS7F,KAAK0T,MAAM7N,UAAc,GACpF7F,KAAK0T,MAAMb,YAAcQ,EAAArP,EAAA0E,cAAC6T,EAAD,CAAa1J,YAAa7S,KAAK0T,MAAMb,cAAkB,KAI1FQ,EAAArP,EAAA0E,cAAA,MAAI4K,UAAU,SACdD,EAAArP,EAAA0E,cAAA,UAAQ/B,GAAG,8BACP0M,EAAArP,EAAA0E,cAACuT,EAAD,CACAxY,IAAK,EACLgE,SAAUlD,EAAQkD,SAClB5B,QAAS7F,KAAK0T,MAAM7N,QACpBqO,kBAAmBlU,KAAK4b,eAExBvI,EAAArP,EAAA0E,cAACwT,EAAD,CACAzY,IAAK,EACLoC,QAAS7F,KAAK0T,MAAM7N,QACpBiB,MAAO9G,KAAK0T,MAAM5N,YAClBoT,gBAAiBlZ,KAAK0b,sBArHrBnI,IAAMC,WCXZgJ,2LATX,OACEnJ,EAAArP,EAAA0E,cAAA,WACE2K,EAAArP,EAAA0E,cAAA,OAAK4K,UAAU,OACbD,EAAArP,EAAA0E,cAAC+T,GAAD,eALQlJ,IAAMC,YCQJkJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShO,MACvB,2DCZNiO,IAASC,OAAO1J,EAAArP,EAAA0E,cAACsU,GAAD,MAAS/X,SAASgY,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvc,KAAK,SAAAwc,GACjCA,EAAaC","file":"static/js/main.faba07cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/manicule.15158cdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/sgalogo.151f80c9.png\";","module.exports = __webpack_public_path__ + \"static/media/intensity_legend.91d6f78c.svg\";","// This class holds a cache of XML documents, fetching them from the web if they are not there\n// Every piece of code uses this, so that we can load XMLs again and again without worried about performance\n//\n// NOTE: The cache contains parsed Documents. If you change the document, it's going to be changed everywhere.\n// This is on purpose - as we add attributes and tags for pointer resolution.\n\nexport default class XmlCache {\n    private  _xmls : Map<string, Document>;  // Map from URL to a parsed XML\n    private _promises: Map<string, Promise<Document>>;\n    private static documentCount = 0;\n\n    public constructor() {\n        this._xmls = new Map<string, Document>();\n        this._promises = new Map<string, Promise<Document>>();\n    }\n\n    public getXML(url: string): Promise<Document> {\n        // This function is async, but we implement the Promises ourselves, since we also cache promises\n        // This code only works because asynchronous Javascript is single threaded (note there are no locks)\n        if (this._xmls.has(url)) {\n            return Promise.resolve(this._xmls.get(url)!);\n        }\n\n        if (this._promises.has(url)) {\n            return this._promises.get(url)!;\n        }\n\n        const promise = this.fetchXML(url);\n        this._promises.set(url, promise);\n        promise.then(() => {\n            this._promises.delete(url);\n        });\n        return promise;\n    }\n\n    private parseXML(xml: string) {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(xml, \"text/xml\");\n    \n        return doc;\n    }\n    \n    private async fetchXML(url:string) {\n        const response = await fetch(url);\n        const xml = await response.text();\n    \n        const doc = this.parseXML(xml);\n        this._xmls.set(url, doc);\n\n        return doc\n    }\n}","// This class holds a cache of JSON documents, fetching them from the web if they are not there\n\nexport default class JsonCache {\n    private  _jsons : Map<string, Object>;  // Map from URL to a parsed XML\n    private _promises: Map<string, Promise<Object>>;\n    private static documentCount = 0;\n\n    public constructor() {\n        this._jsons = new Map<string, Object>();\n        this._promises = new Map<string, Promise<Object>>();\n    }\n\n    public getJSON(url: string): Promise<Object> {\n        // This function is async, but we implement the Promises ourselves, since we also cache promises\n        // This code only works because asynchronous Javascript is single threaded (note there are no locks)\n        if (this._jsons.has(url)) {\n            return Promise.resolve(this._jsons.get(url)!);\n        }\n\n        if (this._promises.has(url)) {\n            return this._promises.get(url)!;\n        }\n\n        const promise = this.fetchJson(url);\n        this._promises.set(url, promise);\n        promise.then(() => {\n            this._promises.delete(url);\n        });\n        return promise;\n    }\n    \n    private async fetchJson(url:string) {\n        const response = await fetch(url);\n        let json = await response.json();\n\n        if (json.constructor === Array) {\n            json = { json }\n        }\n\n        this._jsons.set(url, json);\n\n        return json\n    }\n}","\nexport function evaluateXPath(doc: Document, xpath: string): Node[] {\n    const resolver = doc.createNSResolver(doc.documentElement);\n    try{\n        doc.evaluate(xpath, doc, resolver);\n    } catch(err) {\n        console.error(`xpath evaluation of ${xpath} failed: `, err);\n    }\n    const xpathResult = doc.evaluate(xpath, doc, resolver);\n    const nodes: Node[] = [];\n\n    let node = xpathResult.iterateNext();\n    while(node) {\n        nodes.push(node);\n        node = xpathResult.iterateNext();\n    }\n\n    return nodes;\n}\n\nexport function findElementByXmlId(doc: Document, xmlId: string): Element {\n    const attrName = xmlId.startsWith('mock') ? 'mock-id' : 'xml:id';\n    const xpath = `//*[@${attrName}=\"${xmlId}\"]`;\n    const idResults = evaluateXPath(doc, xpath);\n\n    if (idResults.length === 0) {\n        throw Error(`Pointer ${xmlId} references an invalid element`);\n    } else if (idResults.length > 1) {\n        throw Error(`Pointer ${xmlId} references more than one element`);\n    }\n    return idResults[0] as Element;\n}\n","import FvStore from \"./store\";\nimport { Spine } from \"./spine\";\nimport { Annotation } from \"./annotation\";\nimport { evaluateXPath } from \"../tei-processing/helpers\";\n\nexport abstract class Edition {\n    public readonly code: string = ''; // 1818, 1823, 1831, Thomas, MS\n    public readonly name: string = '';\n    public readonly chunks: number[] = [];\n\n    constructor(code: string, name: string, chunks: number[]) {\n        this.code = code;\n        this.name = name;\n        this.chunks = chunks;\n    }\n\n    protected getChunkUrl(chunkId: number) {\n        const chunkStr = chunkId < 10 ? `0${chunkId}` : `${chunkId}`;\n        const url = `https://raw.githubusercontent.com/PghFrankenstein/fv-data/master/variorum-chunks/f${this.code}_C${chunkStr}.xml`;\n\n        return url;\n    }\n\n    public async getXML(chunkId: number) {\n        return await FvStore.cache.getXML(this.getChunkUrl(chunkId));\n    }\n\n    public abstract getMainRootElements(document: Document): Element[];\n    public getMarginRootElements(document: Document): Element[] {\n        return []; // The default behavior is no margins\n    }\n}\n\nexport class EditionWithBody extends Edition {\n    public getMainRootElements(document: Document): Element[] {\n        try {\n            return [document.getElementsByTagName('body')[0]];\n        } catch(err) {\n            console.error(`Can't located body element of ${this.code}: ${err}`);\n            throw new Error(\"Can't locate body element\");\n        }\n    }\n} \n\nexport class MSEdition extends Edition { \n    public getMainRootElements(document: Document): Element[] {\n        const xpath = \"//tei:zone[@type='main']\";\n        const nodes = evaluateXPath(document, xpath);\n        return nodes.map((n) => n as Element);\n    }\n\n    public getMarginRootElements(document: Document): Element[] {\n        const xpath = \"//tei:zone[@type='left_margin']\";\n        const nodes = evaluateXPath(document, xpath);\n        return nodes.map((n) => n as Element);\n    }\n}\n\n\nexport class Chunk {\n    public readonly edition: Edition;\n    public readonly chunkNumber: number;\n    public readonly tei: Document;\n    public readonly mainRoots: Element[];\n    public readonly marginRoots: Element[];\n    public readonly variations: Spine;\n    public readonly annotation: Annotation | undefined;\n\n    private constructor(edition: Edition, chunkNumber: number, tei: Document, spine: Spine, annotation: Annotation | undefined) {\n        this.edition = edition;\n        this.chunkNumber = chunkNumber;\n        this.tei = tei;\n        this.variations = spine;\n        this.annotation = annotation;\n        this.mainRoots = edition.getMainRootElements(tei);\n        this.marginRoots = edition.getMarginRootElements(tei);\n    }\n\n    public static async load(edition: Edition, chunkNumber: number): Promise<Chunk> {\n        const document = await edition.getXML(chunkNumber);\n        const spine = await FvStore.getSpine(chunkNumber);\n        await spine.initialize();\n\n        // Only initialize annotations for all printed editions (not the MS).\n        let annotation\n        if (edition.code !== 'MS') {\n            annotation = await FvStore.getAnnotation(edition.code, chunkNumber);\n            await annotation.initialize();\n        }       \n\n        const chunk = new Chunk(edition, chunkNumber, document, spine, annotation);\n        // chunk.addAppReferences();\n\n        return chunk;\n    }\n\n    public getApp(appRef: string) {\n        const app = this.variations.apps.find((a) => a.id === appRef);\n        if(!app) {\n            throw new Error(`Can't locate app ${appRef}`);\n        }\n        return app;\n    }\n}\n","import FvStore from \"./store\";\nimport { Edition } from \"./edition\";\nimport { evaluateXPath, findElementByXmlId } from \"../tei-processing/helpers\";\n\ninterface PointerData {\n    ptrElement: Element;\n    groupId: string;\n    edition: Edition;\n    referencedUrl: string;\n    referencedTarget: string;\n\n    dereferenced?: Element;\n}\n\n// async function debug1818(where: string) {\n//     const xml = await FvStore.getEdition('1818').getXML(1);\n//     console.debug(`1818 ${where}:`)\n//     console.debug(xml.documentElement.outerHTML);\n// }\n\nexport class ReadingGroup {\n    public readonly groupId: string;\n    public readonly editions: Edition[];\n    public readonly apparatus: Apparatus;\n    public readonly element?: Element;\n\n    private readonly pointers: PointerData[];\n\n    constructor(apparatus: Apparatus, private grpElement: Element) {\n        this.groupId = grpElement.getAttribute('xml:id')!;\n        this.apparatus = apparatus;\n        this.editions = this.fillEditions();\n        this.pointers = this.fillPointers();\n        this.element = this.buildElement();\n    }\n\n    private fillEditions() {\n        const rdgElements = Array.from(this.grpElement.getElementsByTagName('rdg'));\n        const editionCodes = rdgElements.map((rdg) => rdg.getAttribute('wit')!.substr(2)); // <rdg wit=\"#fMS\">\n        const editions = editionCodes.map((ec) => FvStore.editions.find((ed) => ed.code === ec)!);\n\n        return editions;\n    }\n\n    private fillPointers() {\n        // Fill pointers for one of the editions in the group, as they are all identical\n        const edition = this.editions[0];\n        return this.apparatus.pointers.filter((ptr) => ptr.groupId === this.groupId && ptr.edition === edition);\n    }\n\n    private buildElement() {\n        // Build a new XML element that contains all the dereferenced pointers in this group\n        // We create a new document for each such element\n        if (this.pointers.length === 0) {\n            return undefined;\n        }\n\n        const doc = document.implementation.createDocument(null, null, null);\n        const group = doc.createElement('rdgGrp');\n        const children = this.pointers.map((ptr) => ptr.dereferenced!);\n        for(const child of children) {\n            const clone = child.cloneNode(true);  // We must clone the node, otherwise it's detached from the original XML\n            group.appendChild(clone);\n        }\n        doc.appendChild(group);\n\n        return group;\n    }\n}\n\nexport class Apparatus {  // Content of the <app> tag\n    public readonly id: string;\n    public readonly n: number | undefined;\n    public readonly element: Element;\n\n    public pointers: PointerData[];\n    private _groups: ReadingGroup[];\n\n    constructor(element: Element) {\n        this.element = element;\n\n        const idAttr = element.attributes.getNamedItem('xml:id')\n        if (!idAttr) {\n            throw new Error('<app> tag with no xml:id');\n        }\n        this.id = idAttr.value;\n\n        const nAttr = element.attributes.getNamedItem('n');\n        this.n = nAttr ? parseInt(nAttr.value) : undefined;\n\n        this.pointers = this.parsePointers();\n        this._groups = [];\n    }\n\n    public get groups() { return this._groups; }\n\n    public buildGroups() {\n        const groupElements = Array.from(this.element.getElementsByTagName('rdgGrp'));\n        // const groupSet = new Set<string>(this.pointers.map((ptr) => ptr.groupId));\n        this._groups = Array.from(groupElements).map((grp) => new ReadingGroup(this, grp));\n    }\n\n    private parsePointers() {\n        const ptrElements = Array.from(this.element.getElementsByTagName('ptr'));\n        const ptrs = ptrElements.map((el) => this.parsePointer(el));\n\n        return ptrs;\n    }\n\n    private parsePointer(ptrElement: Element): PointerData {\n        const rdgElement = ptrElement.parentNode as Element;\n        if (!rdgElement || rdgElement.tagName !== 'rdg') {\n            throw new Error(`Parent of <ptr> is not <rdg>`);\n        }\n        const witAttr = rdgElement.attributes.getNamedItem('wit');\n        if (!witAttr) {\n            throw new Error('<rdg> element does not have a wit attribute');\n        }\n        const editionCode = witAttr.value.substr(2);  // with is #f1818, #fMS etc...\n        let edition: Edition;\n        try {\n            edition = FvStore.getEdition(editionCode);\n        } catch(err) {\n            throw new Error(`<rdg> has invalid witness ${witAttr.value}`);\n        }\n\n        const rdgGroupElement = rdgElement.parentNode as Element;\n        if(!rdgGroupElement || rdgGroupElement.tagName !== 'rdgGrp') {\n            throw new Error(`Parent of <rdg> element is not <rdgGrp>`);\n        }\n        const grpIdAttr = rdgGroupElement.attributes.getNamedItem('xml:id');\n        if (!grpIdAttr) {\n            throw new Error('<rdrGrp> has no xml:id');\n        }\n        const groupId = grpIdAttr.value;\n\n        const targetAttr = ptrElement.attributes.getNamedItem('target');\n        if (!targetAttr) {\n            throw new Error(`<ptr> element has not target attribute`);\n        }\n\n        const parts = targetAttr.value.split('#')\n        if (parts.length !== 2) {\n            throw new Error(`Target ${targetAttr.value} is not well formatted. Expected uri#xpath`);\n        }\n\n        return {\n            ptrElement,\n            edition,\n            groupId,\n            referencedUrl: parts[0],\n            referencedTarget: parts[1],\n        };\n    }\n\n    public getOtherGroups(ed: Edition) {\n        // Returns all the groups besides the one that holds this edition\n        return this.groups.filter((grp) => grp.editions.indexOf(ed) === -1);\n    }\n}\n\ninterface StringRange {\n    xpath: string,\n    start: number,\n    length: number,\n}\n\n\nexport class Spine {\n    public readonly chunkNumber: number;\n    private _apps: Apparatus[] | undefined;\n    private _xml: Document | undefined;\n    private _initialized = false;\n    private _initializationPromise?: Promise<void>;\n    private static mockElementCount = 0;\n    \n    constructor(chunk: number) {\n        this.chunkNumber = chunk\n    }\n\n    public initialize(): Promise<void> {\n        // Initialize may be called several times before the first initialization complete.\n        // We make sure initialization runs only once\n        if(this._initializationPromise) {\n            return this._initializationPromise;\n        }\n\n        this._initializationPromise = this.innerInitialize();\n        this._initializationPromise.then(() => {\n            this._initializationPromise = undefined;\n        })\n        return this._initializationPromise;\n    }\n\n    private async innerInitialize() {\n        if(this._initialized) {\n            return;\n        }\n\n        this._xml = await this.getXML();\n\n        await this.parseApps();\n        await this.fetchAllReferences();\n        await this.rewriteStringRanges();\n        await this.dereferencePointers();\n        this.addBackPointers();\n        this.buildGroupsInApps();\n        \n        this._initialized = true;\n    }\n\n    private async getXML() {\n        const chunkStr = this.chunkNumber < 10 ? `0${this.chunkNumber}` : `${this.chunkNumber}`;\n        const url = `https://raw.githubusercontent.com/PghFrankenstein/fv-data/master/standoff_Spine/spine_C${chunkStr}.xml`\n\n        const document = await FvStore.cache.getXML(url);\n        return document;\n    }\n\n    private async parseApps() {\n        if(!this._xml) {\n            throw new Error('parseApps called before getXML, which makes no sense')\n        }\n\n        const appElements = Array.from(this._xml.getElementsByTagName('app'));\n        const apps = appElements.map((app) => new Apparatus(app));\n        this._apps = apps;\n    }\n\n    public get apps(): Apparatus[] {\n        if (!this._apps) {\n            throw new Error(`Spine not initialized yet`);\n        }\n        return this._apps;\n    }\n\n    // Download all referenced XMLs concurrently (if they're not cached)\n    private async fetchAllReferences() {\n        let allUrls = [] as string[];\n\n        for(let app of this.apps) {\n            const urls = app.pointers.map((ptr) => ptr.referencedUrl);\n            allUrls = allUrls.concat(urls);\n        }\n\n        const unique = Array.from(new Set<string>(allUrls));\n        const promises = unique.map((url) => FvStore.cache.getXML(url));\n        await Promise.all(promises);  // Returns only once all URLs have been fetched\n    }\n\n    // Rewrite string ranges to ordinary pointers. \n    // This is done by adding tags in the target XML with their own ID surrounding the relevant text elements\n\n    private async rewriteStringRanges() {\n        const re = /^string-range\\((?<xpath>.+),(?<start>\\d+),(?<length>\\d+)\\)$/;\n        \n        for(let app of this.apps) {\n            const invalidPointers = new Set<PointerData>();\n            for(let ptr of app.pointers) {\n                const match = ptr.referencedTarget.match(re);\n                if (match) {\n                    const stringRange = {\n                        xpath: match.groups!.xpath,\n                        start: parseInt(match.groups!.start),\n                        length: parseInt(match.groups!.length),\n                    };\n                    try {\n                        await this.rewriteStringRange(ptr, stringRange);\n                    } catch(err) {\n                        invalidPointers.add(ptr);\n                    }\n                }\n            }\n\n            const validPointers = app.pointers.filter((ptr) => !invalidPointers.has(ptr));\n            app.pointers = validPointers;\n        }\n    }\n\n    private async rewriteStringRange(ptr: PointerData, range: StringRange) {\n        // For now - just get the xml:id of the target element and replace the pointer's target.\n        // Add an xml:id if none exists on the target element\n        const targetDoc = await FvStore.cache.getXML(ptr.referencedUrl);\n        const targetNodes = evaluateXPath(targetDoc, range.xpath);\n\n        if (targetNodes.length === 0) {\n            console.error(`string-range for xpath ${range.xpath} failed to return a node`);\n            throw Error('string-range returned no nodes');\n        }\n\n        if (targetNodes.length > 1) {\n            console.error(`string-range for xpath ${range.xpath} returned more than one node`);\n            throw Error('string-range returned more than one node');\n        }\n\n        const targetElement = targetNodes[0] as Element;\n        const idAttr = targetElement.attributes.getNamedItem('xml:id');\n        const mockIdAttr = targetElement.attributes.getNamedItem('mock-id');\n        let xmlId = '';\n        if (idAttr) {\n            xmlId = idAttr.value;\n        } else if(mockIdAttr) {\n            xmlId = mockIdAttr.value;\n        } else {\n            xmlId = `mock-id-${Spine.mockElementCount}`;\n            Spine.mockElementCount += 1;\n\n            // Adding xml:id to an existing document doesn't work fully - XPath doesn't find it\n            // unless the document is completely reparsed. So we add our own mock-id attribute instead\n            targetElement.setAttribute('mock-id', xmlId);\n        }\n\n        // Update the Pointer\n        ptr.referencedTarget = xmlId;  // In memory\n        ptr.ptrElement.setAttribute('target', `${ptr.referencedUrl}#${xmlId}`);\n    }\n\n    private async dereferencePointers() {\n        for(let app of this.apps) {\n            const invalidPointers = new Set<PointerData>();\n\n            for(let ptr of app.pointers) {\n                const document = await FvStore.cache.getXML(ptr.referencedUrl);\n                try {\n                    const element = findElementByXmlId(document, ptr.referencedTarget);\n                    ptr.dereferenced = element;\n                } catch(err) {\n                    console.error(`Pointer ${ptr.ptrElement.outerHTML} is invalid`);\n                    invalidPointers.add(ptr);\n                }\n            }\n\n            const validPointers = app.pointers.filter((ptr) => !invalidPointers.has(ptr));\n            app.pointers = validPointers\n        }\n    }\n\n    private addBackPointers() {\n        // We will add the back pointers to all editions while we're at it\n        // Backpointers are an attribute - app-ref, which contains the id of the app element\n        for(let app of this.apps) {\n            const visitedApp = new Set<string>();\n            for(let ptr of app.pointers) {\n                if (!ptr.dereferenced) {\n                    console.error('Non dereferenced pointed in addBackPointers - pointers should all be dereferenced by now');\n                    continue;\n                }\n                const firstInApp = !visitedApp.has(ptr.referencedUrl);\n                ptr.dereferenced!.setAttribute('app-ref', app.id);\n                ptr.dereferenced!.setAttribute('first-in-app', firstInApp ? 'true' : 'false');\n                // console.log(ptr.dereferenced!.outerHTML);\n                visitedApp.add(ptr.referencedUrl);\n            }\n        }\n    }\n\n    private buildGroupsInApps() {\n        // Build the groups in all App objects\n        for(const app of this.apps) {\n            app.buildGroups();\n        }\n    }\n}\n","import FvStore from \"./store\";\nimport { evaluateXPath } from \"../tei-processing/helpers\";\n\nexport class Annotation {\n    public readonly editionCode: string;\n    public readonly chunkNumber: number;\n    private _json: Object | undefined;\n    private _initialized = false;\n    private _initializationPromise?: Promise<void>;\n    \n    constructor(edition: string, chunk: number) {\n        this.editionCode = edition;\n        this.chunkNumber = chunk;\n    }\n\n    public initialize(): Promise<void> {\n        // Initialize may be called several times before the first initialization complete.\n        // We make sure initialization runs only once\n        if(this._initializationPromise) {\n            return this._initializationPromise;\n        }\n\n        this._initializationPromise = this.innerInitialize();\n        this._initializationPromise.then(() => {\n            this._initializationPromise = undefined;\n        })\n        return this._initializationPromise;\n    }\n\n    private async innerInitialize() {\n        if(this._initialized) {\n            return;\n        }\n\n        this._json = await this.getJSON();\n\n        await this.parsePointers();\n        \n        this._initialized = true;\n    }\n\n    private async getJSON() {\n        const url = `https://raw.githubusercontent.com/FrankensteinVariorum/fv-data/master/hypothesis/openannotation/${this.editionCode}_xml_id_mapping.json`\n\n        const document = await FvStore.jcache.getJSON(url);\n\n        return document;\n    }\n    \n    private async parsePointers() {\n        const chunkStr = this.chunkNumber < 10 ? `0${this.chunkNumber}` : `${this.chunkNumber}`;\n        const xml = await FvStore.cache.getXML(`https://raw.githubusercontent.com/PghFrankenstein/fv-data/master/variorum-chunks/f${this.editionCode}_C${chunkStr}.xml`)\n\n        this._json![\"json\"].map((annotation: Object) => this.parsePointer(annotation, xml));\n    }\n\n    private parsePointer(annotation: Object, xml: Document) {\n        let selector = annotation[\"target\"][\"selector\"].filter((s) => s[\"type\"] === 'RangeSelector')[0][\"startSelector\"]\n        const xpath = selector[\"value\"]\n        const target = evaluateXPath(xml, xpath)\n        if (target.length > 0) {\n            const el = <Element><any>target[0]\n            const val = el.getAttribute(\"annotatedBy\")\n            if (val) {                \n                el.setAttribute(\"annotatedBy\", `${val} ${annotation[\"id\"]}`)\n            } else {\n                el.setAttribute(\"annotatedBy\", annotation[\"id\"])\n            }\n        }\n        return xpath\n    }\n\n    public getAnnotation(id: string) {\n        const annotation = this._json![\"json\"].filter((a: Object) => a['id'] === id)[0]        \n        return annotation\n    }\n   \n}\n","import XmlCache from \"./xml-cache\";\nimport JsonCache from \"./json-cache\";\nimport { Edition, EditionWithBody, MSEdition } from \"./edition\";\nimport { Spine } from \"./spine\";\nimport { Annotation } from \"./annotation\";\n\n/*\n * This class contains the application Store, which holds all the TEI data, annotation data, as well as processed data.\n * We are not using a Redux store here to save time. In the future we might turn this into a Redux store.\n * In the mean time, we have a singleton store instance, which is passed to the root component of the application,\n * (although the singleton can just be accessed by any class)\n */\n\n class FvStoreClass {\n     public readonly cache: XmlCache;\n     public readonly jcache: JsonCache;\n     public readonly editions: Edition[];\n     public readonly spines: Spine[];\n     public readonly annotations: Annotation[];\n     public static instance = new FvStoreClass();\n\n     private constructor() {\n         this.cache = new XmlCache();\n         this.jcache = new JsonCache();\n         this.editions = [\n            new MSEdition('MS', 'MS', [7, 8, 9, 10]),\n            new EditionWithBody('1818', '1818', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n            new EditionWithBody('Thomas', 'Thomas', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n            new EditionWithBody('1823', '1823', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n            new EditionWithBody('1831', '1831', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n         ]\n\n         this.spines = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => new Spine(i));\n\n         this.annotations = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => new Annotation('1818', i)).concat(\n            [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => new Annotation('1823', i)),\n            [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => new Annotation('1831', i)),\n            [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => new Annotation('Thomas', i))\n         )\n     }\n\n     public getEdition(code: string): Edition {\n         const ed = this.editions.find((ed) => ed.code === code);\n\n         if (!ed) {\n             throw new Error(`Can't find edition ${code}`);\n         }\n\n         return ed;\n     }\n\n     public getSpine(chunk: number): Spine {\n         const spine = this.spines.find((sp) => sp.chunkNumber === chunk);\n\n         if(!spine) {\n             throw new Error(`Can't find spine for chunk ${chunk}`);\n         }\n         return spine;\n     }\n\n     public getAnnotation(edition: string, chunk: number): Annotation {\n        const annotation = this.annotations.find((sp) => sp.editionCode === edition && sp.chunkNumber === chunk);\n\n        if(!annotation) {\n            throw new Error(`Can't find annotations for edition ${edition}`);\n        }\n        return annotation;\n    }\n }\n\nconst FvStore = FvStoreClass.instance;\nexport default FvStore;  // Everybody can just access FvStore.property","import { Edition } from \"../../data/edition\";\nimport React from \"react\";\n\ninterface EditionDotProps {\n    edition: Edition;\n    small?: boolean | undefined;\n}\n\nclass EditionDot extends React.Component<EditionDotProps> {\n    render() {\n        let classes = `dot ed-${this.props.edition.code}`;\n        if (this.props.small) {\n            classes += ' small-dot';\n        }\n\n        return <span className={classes}/>;\n    }\n}\n\nexport default EditionDot;","import React from 'react';\nimport Select from 'react-select';\nimport { Edition } from '../../data/edition';\nimport FvStore from '../../data/store';\nimport EditionDot from '../helpers/EditionDot';\n\nexport interface SelectOption {\n    value: string;\n    label: any;// HTMLSpanElement;\n}\n\ninterface EditionSelectorProps {\n    editions: Edition[],\n    edition: Edition,\n\n    onEditionSelected: (edition: Edition) => void;\n}\n\ninterface EditionSelectorState {\n    availableEditions: SelectOption[],\n    selectedEdition: SelectOption | undefined,\n}\n\nclass EditionSelector extends React.Component<EditionSelectorProps, EditionSelectorState> {\n\n    state = {\n        availableEditions: [] as SelectOption[],\n        selectedEdition: undefined as SelectOption | undefined,\n    }\n    \n    componentDidMount = () => {\n        const editions = FvStore.editions.map((ed, index) => ({ key: index, value: ed.code, label: <label><EditionDot edition={ ed }/>{ed.name}</label> } as SelectOption));\n\n        // Select the first edition\n        this.setState({ availableEditions: editions, selectedEdition: editions[0] });\n        this.props.onEditionSelected(this.props.editions[0]);\n    }\n\n    componentDidUpdate(prevProps: EditionSelectorProps) {\n        if(prevProps.edition !== this.props.edition) {\n            const option = this.state.availableEditions.find((ed) => ed.value === this.props.edition.code);\n            if(option) {\n                this.setState( { selectedEdition: option });\n            }\n        }\n    }\n\n    editionChanged = (selectedOption: SelectOption) => {\n        const edition = FvStore.editions.find((ed) => ed.code === selectedOption.value);\n        if(!edition) {\n            console.warn(`Couldn't find edition for selection ${selectedOption.value}`);\n            return;\n        }\n\n        this.setState( { selectedEdition: selectedOption });\n        this.props.onEditionSelected(edition);\n    }\n\n\n    render() {\n        return (\n        <div>\n            <label className='bold-choose'>CHOOSE A VERSION</label>\n            <Select\n                className='select-style'\n                onChange={this.editionChanged}\n                options={this.state.availableEditions}\n                value={this.state.selectedEdition}\n            ></Select>\n        </div>\n        );\n    }\n}\n\nexport default EditionSelector;\n","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\nexport interface TeiReactElementProps {\n   htmlTag?: string;\n   tag: string;\n   id?: string;\n   teiProps: any;\n   showText: boolean;\n   showVariations: boolean;\n}\n\nclass TeiReactElement extends React.Component<TeiReactElementProps> {\n     \n   render() {\n      let tag = '';\n      let closingTag = '';\n\n      if(this.props.htmlTag) {\n         tag = `<${this.props.htmlTag}>`;\n         closingTag = `</${this.props.htmlTag}>`;\n      }\n\n      return (\n         <div className={`tei-element tei-${this.props.tag}`} data-tei-tag={this.props.tag}>\n             {/* data-app-ref={appRef}> */}\n            {ReactHtmlParser(tag)}\n            {this.props.children}\n            {ReactHtmlParser(closingTag)}\n         </div>\n      );\n   }\n}\n\nexport default TeiReactElement;\n","import React from 'react';\n\ninterface TeiReactTextProps {\n    text: string;\n    showText: boolean;\n    showVariations: boolean;\n    showAnnotations: boolean;\n}\n\nclass TeiReactText extends React.Component<TeiReactTextProps> {\n\n    render() {\n        let classes = 'tei-cdata';\n        if (!this.props.showText) {\n            classes += ' no-text';\n        }\n\n        return (\n            <span className={classes}>\n                { this.props.text }      \n            </span>\n        );\n    }\n}\n\nexport default TeiReactText;\n","import React from 'react';\nimport { Apparatus } from '../../data/spine';\nimport { Edition } from '../../data/edition';\nimport EditionDot from '../helpers/EditionDot';\n\ninterface TeiAppWrapperProps {\n   showVariations: boolean;\n   showText: boolean;\n   edition?: Edition;\n   app: Apparatus;\n   firstInApp: boolean;\n   onAppClick?: (app: Apparatus) => void,\n}\n\nclass TeiAppWrapper extends React.Component<TeiAppWrapperProps> {\n   onClick = () => {\n      if (this.props.showVariations && this.props.onAppClick) {\n         this.props.onAppClick(this.props.app);\n      }\n   }\n\n   render() {\n      if(!this.props.showVariations) {\n         return <div className='app-wrapper-hidden'>{ this.props.children }</div>;\n      }\n\n      const intensity = this.props.app.n || 1;\n      const level = (intensity < 5) ? 1 : (intensity < 25) ? 2 : 3;\n      const classes = `app-wrapper app-intensity-${level}`;\n\n      // Calculate the dot elements\n      const groups = this.props.app.getOtherGroups(this.props.edition!);\n      let dotElements: any[] = [];\n      let key = 0;\n      for(const group of groups) {\n         const groupDots = group.editions.map((ed) => <EditionDot small={true} edition={ ed } key={ed.code} />);\n         dotElements = dotElements.concat(groupDots);\n         dotElements.push(<span className='dot dot-break' key={key}/>);\n         key++;\n      }\n\n      let dotClasses = 'app-wrapper-dots';\n      if(!this.props.showText) {\n         dotClasses += ' no-text';\n      }\n\n      return (\n         <div className={classes} onClick={this.onClick} data-app={this.props.app.id}>\n            { this.props.firstInApp ? <div className={dotClasses}>\n               { dotElements }\n            </div> : '' }\n            { this.props.children }\n         </div>\n      );\n   }\n}\n\nexport default TeiAppWrapper;\n","import React from 'react';\nimport manicule from '../../images/manicule.svg';\n\ninterface TeiAnnotationWrapperProps {\n   showAnnotations: boolean;\n   annotations: Array<Object>;\n   onAnnotationClick?: (annotations: Array<Object>) => void,\n}\n\nclass TeiAnnotationWrapper extends React.Component<TeiAnnotationWrapperProps> {\n   onClick = (e) => {\n      if (this.props.showAnnotations && this.props.onAnnotationClick) {\n         this.props.onAnnotationClick(this.props.annotations)\n         e.stopPropagation()\n      }\n   }\n\n   render() {\n      return (\n         <>\n            <div onClick={this.onClick} style={{\n               position: 'absolute',\n               width: '4em',\n               cursor: 'pointer',\n               left: '-5em',\n               marginTop: '1em',\n               display: 'flex',\n               alignItems: 'center',\n               borderBottom: '1px solid grey'\n               }}>\n               <span style={{paddingRight: '.5em', fontStyle: 'italic'}}>{this.props.annotations.length}</span>\n               <img src={manicule} style={{width: '40px'}}/>\n            </div>\n            { this.props.children }\n         </>\n      );\n   }\n}\n\nexport default TeiAnnotationWrapper;\n","/* This file contains a class that takes the TEI and converts it into a React tree */\n\nimport React, { ReactNode } from 'react';\nimport TeiReactElement from '../components/tei/TeiReactElement';\nimport TeiReactText from '../components/tei/TeiReactText';\nimport { Chunk, Edition } from '../data/edition';\nimport TeiAppWrapper from '../components/tei/TeiAppWrapper';\nimport TeiAnnotationWrapper from '../components/tei/TeiAnnotationWrapper';\nimport { Apparatus } from '../data/spine';\n\nexport class TeiConverter {\n    private static index = 0;\n\n    constructor(private showVariations: boolean, private showAnnotations: boolean, private showText: boolean, private edition?: Edition, private chunk?: Chunk) {\n    }\n\n    private getHtmlTag(teiTag: string) {\n        if (teiTag === 'p') {\n            return 'p';\n        } else if (teiTag === 'head') {\n            return 'h3';\n        } else if (teiTag === 'ab') {\n            return 'p';\n        }\n\n        return undefined;\n    }\n\n    private buildProperties(node: Node): any {\n        const nodeAttributes = (node as any).attributes;\n        const valueProps: any = {};\n\n        for (var i = 0; i < nodeAttributes.length; i++) {\n            let name = nodeAttributes[i].nodeName;\n            if (name === 'xml:id') {\n                name = 'id';\n            }\n            valueProps[name] = nodeAttributes[i].nodeValue;\n        }\n\n        return valueProps;\n    }\n\n    public teiToReactElement(node: Node, onAppClick?: (app: Apparatus) => void, onAnnotationClick?: (annotations: Array<Object>) => void): ReactNode {  // Returns a single React element\n        const reactChildren: ReactNode[] = [];\n        // create elements for all children\n        if (node.hasChildNodes()) {\n            for (let i = 0; i < node.childNodes.length; i++) {\n                const childNode = node.childNodes[i];\n                let childElement: ReactNode = undefined;\n                if (childNode.nodeType === 1) {\n                    childElement = this.teiToReactElement(childNode, onAppClick, onAnnotationClick);\n                } else if (childNode.nodeType === 3) {\n                    let text = childNode.textContent || '';\n                    text = text.trim();\n                    if (text) {\n                        childElement = React.createElement(TeiReactText, {\n                            text: childNode.textContent || '',\n                            showText: this.showText,\n                            showVariations: this.showVariations,\n                            showAnnotations: this.showAnnotations,\n                            key: TeiConverter.index++,\n                        });\n                    }\n                } else {\n                    console.warn('Child node of unrecognizezd type: ', childNode);\n                }\n\n                if (childElement) {\n                    reactChildren.push(childElement);\n                }\n            }\n        }\n\n        // build properties\n        const teiProps = this.buildProperties(node);\n\n        // return create react element\n        var props: any = {\n            tag: node.nodeName,\n            key: TeiConverter.index++,\n            htmlTag: this.getHtmlTag(node.nodeName),\n            showText: this.showText,\n            showVariations: this.showVariations,\n            showAnnotations: this.showAnnotations,\n            teiProps: teiProps,\n        };\n\n        let reactElement: ReactNode = React.createElement(TeiReactElement, props, reactChildren); // Pass children\n\n        if (this.chunk && this.showVariations && teiProps['app-ref']) {\n            const app = this.chunk.getApp(teiProps['app-ref']);\n            const firstInApp = teiProps['first-in-app'] === 'true';\n\n            // We have an <app> to wrap around the element\n            reactElement = React.createElement(TeiAppWrapper, {\n                key: TeiConverter.index++,\n                showVariations: this.showVariations,\n                showText: this.showText,\n                edition: this.edition,\n                onAppClick,\n                app, firstInApp},\n            [reactElement])\n        }\n\n        if (this.chunk && this.showAnnotations && teiProps['annotatedBy']) {\n            // There may be multiple annotations targeting this element\n            const annotations: Array<Object> = teiProps[\"annotatedBy\"].split(\" \").map((target) => {\n                return this.chunk!.annotation!.getAnnotation(target)\n            })\n            reactElement = React.createElement(TeiAnnotationWrapper, {\n                key: TeiConverter.index++,\n                showAnnotations: this.showAnnotations,\n                onAnnotationClick,\n                annotations},\n            [reactElement])\n        }\n\n        return reactElement;\n    }\n}\n","import React, { ReactNode } from 'react';\nimport { TeiConverter } from '../../tei-processing/tei-converter';\nimport { Chunk, Edition } from '../../data/edition';\nimport { Apparatus } from '../../data/spine';\nimport { VoidTypeAnnotation } from '@babel/types';\n\ninterface TeiRenderingProps {\n    chunk: Chunk;\n    showVariations: boolean;\n    showAnnotations: boolean;\n    showText: boolean;\n    edition: Edition;\n    onAppClick?: (app: Apparatus) => void;\n    onAnnotationClick?: (annotations: Array<Object>) => void;\n}\n\ninterface TeiRenderingState {\n    elements?: ReactNode[];\n}\n\nclass TeiRendering extends React.Component<TeiRenderingProps, TeiRenderingState> {\n    state = {\n        elements: undefined,\n    }\n\n    componentDidMount() {\n        this.getTeiObjects();\n    }\n\n    componentDidUpdate(prevProps: TeiRenderingProps) {\n        if(!prevProps || \n            this.props.chunk !== prevProps.chunk || \n            this.props.edition !== prevProps.edition || \n            this.props.showText !== prevProps.showText ||\n            this.props.showVariations !== prevProps.showVariations ||\n            this.props.showAnnotations !== prevProps.showAnnotations) {\n            this.getTeiObjects(); // No matter which property has changed, we need to render everything again\n        }\n    }\n\n    getTeiObjects = () => {\n        const converter = new TeiConverter(this.props.showVariations, this.props.showAnnotations, this.props.showText, this.props.edition, this.props.chunk);\n        const elements = this.props.chunk.mainRoots.map((root) => converter.teiToReactElement(root, this.props.onAppClick, this.props.onAnnotationClick));\n\n        this.setState( { elements });\n    } \n\n    render() {\n        return (\n            <div className=\"tei-container\" style={{position: 'relative'}}>\n                { this.state.elements }\n            </div>\n        );\n    }\n}\n\nexport default TeiRendering;\n","import React from 'react';\nimport { Edition } from '../../data/edition';\nimport Select from 'react-select';\nimport { SelectOption } from './EditionSelector';\n\ninterface PagingProps {\n    edition: Edition | undefined;\n    chunk: number;\n    onChunkSelected: (chunk: number) => void;\n}\n\ninterface PagingState {\n    chunkIndex: number,\n    selectedOption: SelectOption | undefined,\n    availableChunks: SelectOption[],\n    disablePrev: boolean,\n    disableNext: boolean,\n}\n\nclass Paging extends React.Component<PagingProps, PagingState> {\n\n    state = {\n        chunkIndex: this.props.chunk,\n        selectedOption: undefined as SelectOption | undefined,\n        availableChunks: [] as SelectOption[],\n        disablePrev: true,\n        disableNext: false,\n    }\n\n    componentDidUpdate(prevProps: PagingProps) {\n        if (this.props.edition !== prevProps.edition) {\n            let chunks = [] as SelectOption[];\n            if (this.props.edition) {\n                chunks = this.props.edition.chunks.map((c) => ({ value: c.toString(), label: c.toString() } as SelectOption));\n                let prevChunkIndex = 0;\n                if (prevProps) {\n                    prevChunkIndex = this.state.availableChunks.findIndex((opt) => opt.value === prevProps.chunk.toString());\n                    if (prevChunkIndex === -1) {\n                        prevChunkIndex = 0;\n                    }\n                }\n\n                const firstChunk = this.props.edition.chunks[prevChunkIndex];\n                this.setState( { availableChunks: chunks, chunkIndex: prevChunkIndex, selectedOption: chunks[prevChunkIndex] });\n                this.props.onChunkSelected(firstChunk);\n            }\n        }\n\n        if (this.props.chunk !== prevProps.chunk) {\n            const index = this.state.availableChunks.findIndex((opt) => opt.value === this.props.chunk.toString());\n            if (index !== -1) {\n                this.setState({ \n                    chunkIndex: index, \n                    selectedOption: this.state.availableChunks[index], \n                    disablePrev: index===0, \n                    disableNext: index===this.state.availableChunks.length - 1 \n                });\n            } else {\n                console.warn(`Can't set pager to non existing chunk ${this.props.chunk}`);\n                this.setState({ chunkIndex: 0, selectedOption: this.state.availableChunks[0], disablePrev: true, disableNext: this.state.availableChunks.length === 1 });\n            }\n            \n        }\n    }\n\n    onChunkChanged = (selectedOption: SelectOption) => {\n        const chunk = parseInt(selectedOption.value);\n        const index = this.state.availableChunks.findIndex((opt) => opt.value === chunk.toString());\n        this.setState({ chunkIndex: index, selectedOption });\n\n        this.props.onChunkSelected(chunk);\n    }\n\n    updateChunk = (delta: number) => {\n        this.setState( {disablePrev: false, disableNext: false} );\n        const chunk = this.state.chunkIndex + 1;\n        const newChunk = chunk + delta;\n        if (newChunk === 1) {\n            this.setState( {disablePrev: true} );\n        } else if (newChunk === this.state.availableChunks.length) {\n            this.setState( {disableNext: true })\n        }\n        if (this.props.edition!.chunks.indexOf(newChunk) === -1) {\n            return;\n        }\n        const newOption = this.state.availableChunks.find((opt) => opt.value === newChunk.toString());\n        if (!newOption) {\n            console.error(\"Can't locate new option!\")\n        }\n        this.setState({ chunkIndex: newChunk - 1, selectedOption: newOption });\n        this.props.onChunkSelected((newChunk));\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.edition ?\n                <div>\n                    <div className='in-line'>\n                        <label className='bold-choose'>CHOOSE A SECTION</label>\n                        <Select\n                            className='select-style'\n                            onChange={this.onChunkChanged}\n                            options={this.state.availableChunks}\n                            value={this.state.selectedOption}\n                        />\n                    </div>\n                    \n                    <div className='in-line paging-buttons'>\n                        <button onClick={() => this.updateChunk(-1)} className='prev'\n                            disabled={this.state.disablePrev}></button><label>Previous Section</label>\n                        <label className='margin-button'>Next Section</label><button className='next'\n                            onClick={() => this.updateChunk(1)} disabled={this.state.disableNext}></button>\n                    </div>\n                </div>\n                : ''}\n            </div>\n        );\n    }\n}\n\nexport default Paging;\n","import React from 'react';\nimport FvStore from '../../data/store';\nimport { Edition } from '../../data/edition';\nimport sgalogo from '../../images/sgalogo.png'\nimport variations from '../../images/intensity_legend.svg';\nimport EditionDot from '../helpers/EditionDot';\n\ninterface HeaderData {\n    edition: Edition | undefined;\n}\n\nclass Header extends React.Component<HeaderData> {\n\n    render() {\n        const editions = FvStore.editions.map((e, index) => \n            <label key={index} className='edition-label'><EditionDot edition={e} key={e.code}/>{e.name}</label>);\n        let sga\n        if (this.props.edition) {\n            if (this.props.edition!.code === 'MS') {\n                sga = <div id=\"sga\">\n                    <a href=\"http://shelleygodwinarchive.org/sc/oxford/frankenstein/volume/iii/#/p30\"><img src={sgalogo}/></a>\n                    <div>View the manuscript facsimile, transcription and more on the <a href=\"http://shelleygodwinarchive.org/sc/oxford/frankenstein/volume/iii/#/p30\">Shelley-Godwin Archive</a></div>\n                    <hr/>\n                </div>\n            }\n        }\n        return (\n            <div>\n                <header className='viewer__cols'>\n                    <div id='viewer__legend-editions'>\n                        {editions}\n                    </div>\n                    <div id='viewer__title'  className='center-label'>\n                        {this.props.edition ?\n                        <h2>{this.props.edition.name} Edition</h2>\n                        : <h2>Edition</h2>}\n                    </div>\n                    <div id='viewer__legend-variance'>\n                        <label>Amount of Variance</label>\n                        <img className='variations' src={variations} alt=\"variations scale\" />\n                    </div>\n                </header>\n\n                <hr className='line' />\n                <div className='viewer__cols'>\n                    <div className='center-label'>Marginalia</div>\n                    <div className='center-label'>Text</div>\n                    <div className='center-label'>Variations</div>\n                </div>\n                {sga}\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\n\ninterface OptionsSelectorProps {\n    showVariations: boolean,\n    showAnnotations: boolean,\n    showText: boolean,\n\n    onVariationChanged: (variation: boolean) => void;\n    onAnnotationChanged: (annotation: boolean) => void;\n    onTextChanged: (text: boolean) => void;\n}\n\ninterface OptionsSelectorState {\n    showVariations: boolean,\n    showAnnotations: boolean,\n    showText: boolean,\n}\n\nclass OptionsSelector extends React.Component<OptionsSelectorProps, OptionsSelectorState> {\n\n    state = {\n        showVariations: true,\n        showAnnotations: false,\n        showText: true,\n    }\n    \n    componentDidUpdate(prevProps: OptionsSelectorProps) {\n        if (this.props.showVariations !== this.state.showVariations) {\n            this.setState( { showVariations: this.props.showVariations });\n        }\n\n        if(this.props.showText !== this.state.showText) {\n            this.setState( { showText: this.props.showText });\n        }\n        \n    }\n\n    onVariationChanged = () => {\n        const newShow = !this.state.showVariations;\n        this.setState( { showVariations: newShow });\n        this.props.onVariationChanged(newShow);\n    }\n\n    onAnnotationChanged = () => {\n        const newShow = !this.state.showAnnotations;\n        this.setState( { showAnnotations: newShow });\n        this.props.onAnnotationChanged(newShow);\n    }\n    \n    onTextChanged = () => {\n        const newShowText = !this.state.showText;\n        this.setState( { showText: newShowText });\n        this.props.onTextChanged(newShowText);\n    }\n    \n    render() {\n        return (\n        <div>\n            <label className='options-label bold-choose'>CHOOSE OPTIONS</label>\n            <label className='options-label'>\n                <input\n                    name=\"variation\"\n                    type=\"checkbox\"\n                    checked={this.state.showVariations}\n                    onChange={this.onVariationChanged} />\n                See Variants\n            </label>\n\n            <label className='options-label'>\n                <input\n                    name=\"variation\"\n                    type=\"checkbox\"\n                    checked={this.state.showAnnotations}\n                    onChange={this.onAnnotationChanged} />\n                See Annotations\n            </label>\n            \n            <label className='options-label'>\n                <input\n                    name=\"text\"\n                    type=\"checkbox\"\n                    checked={this.state.showText}\n                    onChange={this.onTextChanged} />\n                See Text\n            </label>\n        </div>\n        );\n    }\n}\n\nexport default OptionsSelector;\n","import { ReadingGroup } from \"../../data/spine\";\nimport React from \"react\";\nimport EditionDot from \"../helpers/EditionDot\";\nimport { TeiConverter } from \"../../tei-processing/tei-converter\";\n\ninterface ReadingGroupComponentProps {\n    group: ReadingGroup;\n}\n\n// Note: This class is called ReadingGroupComponent because ReadingGroup is already taken\nclass ReadingGroupComponent extends React.Component<ReadingGroupComponentProps> {\n    render() {\n        const editionNames = this.props.group.editions.map((ed) => ed.name);\n        const title = editionNames.join(', ')\n        const dots = this.props.group.editions.map((ed) => <EditionDot small={true} edition={ed} key={ed.code}/>);\n\n        let content;\n        if (this.props.group.element) {\n            const converter = new TeiConverter(false, false, true);\n            content = converter.teiToReactElement(this.props.group.element);    \n        } else {\n            content = (<div className='empty-group'>[Edition is missing here]</div>);\n        }\n\n        return (\n            <div className='reading-group'>\n                <div className='reading-group-dots'>{ dots }</div>\n                <div className='reading-group-title'>{ title }</div>\n                <div className='reading-group-content'>\n                    { content }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ReadingGroupComponent;","import { Apparatus } from \"../../data/spine\";\nimport React from \"react\";\nimport { Edition } from \"../../data/edition\";\nimport ReadingGroupComponent from \"./ReadingGroupComponent\";\n\ninterface VariationProps {\n    app: Apparatus;\n    edition: Edition;\n}\n\nclass Variation extends React.Component <VariationProps> {\n    render() {\n        const groups = this.props.app.groups.map((grp) => (\n            <ReadingGroupComponent group={grp} key={grp.groupId}/>\n        ))\n        return (\n            <div className=\"app-list\">\n                <hr className=\"app-list-to-divider\"/>\n                { groups }\n            </div>\n        )\n    }\n}\n\nexport default Variation;","import React from \"react\";\n\ninterface AnnotationsProps {\n    annotations: Array<Object>;\n}\n\nclass Annotations extends React.Component <AnnotationsProps> {\n    render() {\n        const annotation: Array<Object> = []\n        for (const annoData of this.props.annotations) {\n          const selector = annoData[\"target\"][\"selector\"].filter((s) => s[\"type\"] === \"TextQuoteSelector\")[0]\n          annotation.push(<div key={annoData[\"id\"]} style={{lineHeight: '1.5em',\n              display: 'block', color: 'darkslategray', marginTop: '2em'}}>\n              <blockquote>\"...{selector.prefix} <span style={{color: '#3F3730', fontWeight: 'bolder'}}>{selector.exact}</span> {selector.suffix}...\"</blockquote>\n              <span style={{fontStyle: \"italic\"}}>{annoData[\"body\"][0][\"value\"]}</span>\n          </div>)\n        }\n        return <>{annotation}</>\n    }\n}\n\nexport default Annotations;","import React from 'react';\nimport EditionSelector from '../PageLayout/EditionSelector';\nimport TeiRendering from '../tei/TeiContainer';\nimport FvStore from '../../data/store';\nimport { Edition, Chunk } from '../../data/edition';\nimport Paging from '../PageLayout/Paging';\nimport Header from '../PageLayout/Header';\nimport OptionsSelector from '../PageLayout/OptionsSelector';\nimport { Apparatus } from '../../data/spine';\nimport Variation from '../Variations/Variation';\nimport Annotations from '../Annotations/Annotations';\n\ninterface ViewerProperties { }\n\ninterface ViewerState {\n    loading: boolean,\n    chunk?: Chunk,\n    chunkNumber: number,\n    edition?: Edition,\n    showVariations: boolean,\n    showAnnotations: boolean,\n    showText: boolean,\n    app: Apparatus | undefined,\n    annotations: Array<Object> | undefined\n}\n\nclass Viewer extends React.Component <ViewerProperties, ViewerState> {\n    state = {\n        loading: false,\n        chunk: undefined as Chunk | undefined,\n        edition: undefined as Edition | undefined,\n        chunkNumber: 0,\n\n        showVariations: true,\n        showAnnotations: false,\n        showText: true,\n        app: undefined,\n        annotations: undefined,\n    }\n\n    \n    onNewChunk = async (chunkNumber: number) => {\n        this.setState( {loading: true, chunk: undefined } );\n        \n        if (!this.state.edition) {\n            throw new Error(\"Cannot get chunk if there is no an edition\");\n        }\n        const chunk = await Chunk.load(this.state.edition, chunkNumber);\n        this.setState( {loading: false, chunk, chunkNumber: chunk.chunkNumber, app: undefined } );\n    }\n\n    onNewEdition = (edition: Edition) => {\n        this.setState( { edition, app: undefined } );\n    }\n    onVariation = (show: boolean) => {\n        this.setState( { showVariations: show } );\n    }\n    onAnnotation = (show: boolean) => {\n        this.setState( { showAnnotations: show } );\n    }\n    onText = (show: boolean) => {\n        this.setState( { showText: show } );\n    }\n\n    onAppClick = (app: Apparatus) => {\n        this.setState( {app, annotations: undefined} );\n    }\n\n    onAnnotationClick = (annotations: Array<Object>) => {\n        this.setState( {annotations, app: undefined} );\n    }\n\n    render() {\n        let viewerClasses = 'viewer__cols';\n        // if (this.state.showText) {\n        //     viewerClasses += ' view-text';\n        // }\n        // if (this.state.showVariations) {\n        //     viewerClasses += ' view-variations';\n        // }\n        // if (this.state.showAnnotations) {\n        //     viewerClasses += ' view-annotations';\n        // }\n\n        return (\n            <section id='viewer'>\n                <div id='viewer__controls'>\n                    <EditionSelector\n                    key={0}\n                    editions={FvStore.editions} \n                    edition={this.state.edition!}\n                    onEditionSelected={this.onNewEdition}\n                    />\n\n                    <Paging\n                    key={1}\n                    edition={this.state.edition} \n                    chunk={this.state.chunkNumber}\n                    onChunkSelected={this.onNewChunk} />\n\n                    <OptionsSelector \n                    showVariations={this.state.showVariations}\n                    showAnnotations={this.state.showAnnotations}\n                    showText={this.state.showText}\n                    onVariationChanged={this.onVariation}\n                    onAnnotationChanged={this.onAnnotation}\n                    onTextChanged={this.onText}\n                    />\n                </div>\n                \n                <Header\n                edition={this.state.edition} />\n\n                <div id='viewer__contents' className={viewerClasses}>\n                    <aside id=\"viewer__marginalia\">\n                    </aside>\n                    { this.state.chunk && this.state.edition ? \n                    <TeiRendering\n                    chunk={this.state.chunk}\n                    edition={this.state.edition}\n                    showVariations={this.state.showVariations}\n                    showAnnotations={this.state.showAnnotations}\n                    showText={this.state.showText}\n                    onAnnotationClick={this.onAnnotationClick}\n                    onAppClick={this.onAppClick}/> : <div></div>}\n                    <aside id=\"viewer_variations\">\n                        { this.state.app ? <Variation app={this.state.app!} edition={this.state.edition!}/> : '' }\n                        { this.state.annotations ? <Annotations annotations={this.state.annotations!}/> : '' }\n                    </aside>\n                </div>\n\n                <hr className='line' />\n                <footer id=\"viewer_pagination_controls\">\n                    <EditionSelector\n                    key={2}\n                    editions={FvStore.editions} \n                    edition={this.state.edition!}\n                    onEditionSelected={this.onNewEdition}\n                    />\n                    <Paging\n                    key={3}\n                    edition={this.state.edition} \n                    chunk={this.state.chunkNumber}\n                    onChunkSelected={this.onNewChunk} />\n                </footer>\n            </section>\n        );\n    }\n}\n\nexport default Viewer;\n","import React from 'react';\nimport Viewer from './components/Viewer/Viewer';\nimport './styles/sass/style.sass';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <Viewer />\n        </div>\n      </div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}