Hi Itay and Talya:

Here's a quick orientation on the production setup.

TL;DR

- locally build the site via Jekyll: bundle exec jekyll build -d ./_site_local
- locally build SASS/JS/Jekyll via Gulp node_modules/gulp/bin/gulp.js buildLocal
- React component can go in ./_includes/viewer.html . Replace the DOM structure as needed.
- You may just want to use the predefined classes and send me snippets to roll into the build. 

PREDEFINED CLASSES
I've created some predefined classes to simplify things:


To set font colour:

.clr--black  
.clr--main
.clr--ms
.clr--1818
.clr--thomas
.clr--1823
.clr--1831

To set background colours:

.clr_bg--black
.clr_bg--main
.clr_bg--ms
.clr_bg--1818
.clr_bg--thomas
.clr_bg--1823
.clr_bg--1831


To set font styles:

.fontfamily-base  (Georgia / Serif)
.fontfamily-heading  (MillerDisplay / Serif)
.fontfamily-alt  (Franklin Gothic / Sans-serif)



JEKYLL
- The site uses the Ruby-based static site generator Jekyll (https://jekyllrb.com/docs/installation/ ).
- On the production server the site outputs to /var/www/html . 
- I've got it set to output to ./_site_local locally.
- We can't currently build on the production site (I'm working on it)

  To build on production (once we set it up)
    bundle exec jekyll build
  
  To build locally
    bundle exec jekyll build -d ./_site_local

GULP
- v 4.x
- Used to build site assets.
- Will be installed via NPM.
- Files are located in the _source directory
- Files output to the assets directory.
- The assets directory will be copied to the static site via the jekyll build process.
- Gulp build will also build Jekyll

Gulp Commands

  To build locally
    node_modules/gulp/bin/gulp.js buildLocal  (or globally gulp buildLocal )
    
  To build on production (when ready)
    node_modules/gulp/bin/gulp.js build ( gulp build )

  To build SASS only
    node_modules/gulp/bin/gulp.js sass
    
  To build JS only
    node_modules/gulp/bin/gulp.js JS
    
SASS
- We use a custom SASS library
- There's more going on we have time to outline properly. 
- It may be wise just to use inline classes and styles for now, but that's up to you.
- I've created a SASS file scoped to the Viewer component.  ./_source/sass/c_local/40_components/_viewer.sass
- You can make any modifications you like there.
- Quick notes:
  - SASS configuration variables can be found in ./_source/sass/_00_configuration.sass
  - You'll find all the colour variables listed there
  - We use a modular scale ( https://www.modularscale.com ) to set relative values for padding, font sizes, etc.. Examples are in the _viewer.sass component. You can use rv() with an integer ( e.g. rv(-1) ) to have the sizing calculated automatically.
  - I've predefined some classes for you if want to avoid SASS altogether.
  - The DOM uses the .viewer__cols class to display a three-column grid
  - Work in progress.
  - There is no mobile version of the viewer as of now.
  
HTML
- The viewer HTML can be found at ./_includes/viewer.html
- Everything in this snippet will be inserted into the viewer page during the build.
- The DOM structure is offered as a starting point. Do you what you need to do here.
- You can header or late-loading JS scripts via their snippets in ./includes/head.html and ./includes/endjs.html